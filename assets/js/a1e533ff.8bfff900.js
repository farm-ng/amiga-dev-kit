"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[6193],{7366:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var i=a(5893),t=a(1151);const l={id:"file-converter",title:"File Converter"},r="File Converter Example",o={id:"examples/file_converter/file-converter",title:"File Converter",description:"Before diving into this example, here's a quick overview of what you'll need to be familiar with:",source:"@site/docs/examples/file_converter/README.md",sourceDirName:"examples/file_converter",slug:"/examples/file_converter/",permalink:"/docs/examples/file_converter/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/examples/file_converter/README.md",tags:[],version:"current",frontMatter:{id:"file-converter",title:"File Converter"},sidebar:"examples",previous:{title:"File Reader",permalink:"/docs/examples/file_reader/"},next:{title:"File Reader CAN",permalink:"/docs/examples/file_reader_can/"}},s={},d=[{value:"1. Obtain a log file",id:"1-obtain-a-log-file",level:2},{value:"Record your own",id:"record-your-own",level:3},{value:"Download the log file",id:"download-the-log-file",level:3},{value:"[Optional] Make a Data folder",id:"optional-make-a-data-folder",level:4},{value:"2. Install the farm-ng Brain ADK package",id:"2-install-the-farm-ng-brain-adk-package",level:2},{value:"3. Install the example&#39;s dependencies",id:"3-install-the-examples-dependencies",level:2},{value:"Setup",id:"setup",level:3},{value:"Install",id:"install",level:3},{value:"4. Execute the Python script",id:"4-execute-the-python-script",level:2},{value:"Additional args",id:"additional-args",level:3}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"file-converter-example",children:"File Converter Example"}),"\n",(0,i.jsxs)(n.admonition,{title:"Basic Knowledge Requirements",type:"info",children:[(0,i.jsx)(n.p,{children:"Before diving into this example, here's a quick overview of what you'll need to be familiar with:"}),(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Python Programming"}),": This example is based in Python, making use of various foundational\nconstructs like functions, conditional statements, and object-oriented techniques."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"OpenCV"}),": A foundational understanding of the OpenCV library, particularly functions related to\nimage decoding and display, as the example showcases how to visualize camera images from the log file."]}),"\n"]})]}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/py/examples/file_converter/main.py",children:(0,i.jsx)(n.strong,{children:"File Converter example"})}),"\nwill take the ",(0,i.jsx)(n.code,{children:"*.bin"})," log file for a given Oak Camera Stream or snapshot\ncaptured by the Recorder app on an Amiga brain and convert it to either\n",(0,i.jsx)(n.code,{children:"*.mp4"})," videos or ",(0,i.jsx)(n.code,{children:"*.jpg"})," images for each view stream."]}),"\n",(0,i.jsx)(n.p,{children:"To successfully run this example, you must use your local PC, as the example won't\nwork if executed directly from a brain (because of the popup window)."}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsx)(n.p,{children:'You should typically expect 4 view streams per Oak Device ("rgb", "disparity", "left, "right").'})}),"\n",(0,i.jsx)(n.h2,{id:"1-obtain-a-log-file",children:"1. Obtain a log file"}),"\n",(0,i.jsx)(n.h3,{id:"record-your-own",children:"Record your own"}),"\n",(0,i.jsxs)(n.p,{children:["See the ",(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.a,{href:"/docs/apps/recorder_app/",children:"Recorder App Guide"})})," for instructions."]}),"\n",(0,i.jsx)(n.h3,{id:"download-the-log-file",children:"Download the log file"}),"\n",(0,i.jsx)(n.p,{children:"You can also download a pre-recorded log file to run this example with."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://farm-ng-dev-auto-plot-mvp.s3.us-west-2.amazonaws.com/datasets/examples_log_file/2023_09_29_17_52_35_070804_dubnium-durian.0000.bin",children:(0,i.jsx)(n.strong,{children:"Click here to download"})})}),"\n",(0,i.jsx)(n.h4,{id:"optional-make-a-data-folder",children:"[Optional] Make a Data folder"}),"\n",(0,i.jsx)(n.p,{children:"We are going to make a folder that will store all of our log\nfiles, including the one you just downloaded."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd <to-your-base-directory>\nmkdir <data-dir>\ncd <data-dir>\nmv ~/Download/2023_09_29_17_52_35_070804_dubnium-durian.0000.bin\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Now you should navigate (in your terminal) to the ",(0,i.jsx)(n.code,{children:"farm-ng-amiga"})," repository."]}),"\n",(0,i.jsxs)(n.h2,{id:"2-install-the-farm-ng-brain-adk-package",children:["2. Install the ",(0,i.jsx)(n.a,{href:"/docs/brain/brain-install",children:"farm-ng Brain ADK package"})]}),"\n",(0,i.jsx)(n.h2,{id:"3-install-the-examples-dependencies",children:"3. Install the example's dependencies"}),"\n",(0,i.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd farm-ng-amiga/\n"})}),"\n",(0,i.jsxs)(n.admonition,{title:"Recommended",type:"tip",children:[(0,i.jsx)(n.p,{children:"Create a virtual environment"}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python3 -m venv venv\nsource venv/bin/activate\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd py/examples/file_converter\npip install -r requirements.txt\n"})}),"\n",(0,i.jsx)(n.h2,{id:"4-execute-the-python-script",children:"4. Execute the Python script"}),"\n",(0,i.jsx)(n.p,{children:"Specify the log file, e.g.:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python main.py --file-name <path-to-file>/2023_09_29_17_52_35_070804_dubnium-durian.0000.bin\n"})}),"\n",(0,i.jsx)(n.h3,{id:"additional-args",children:"Additional args"}),"\n",(0,i.jsxs)(n.p,{children:["Use the ",(0,i.jsx)(n.code,{children:"--help"})," flag to see all possible arguments for using this tool."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# usage: Event file converter example. [-h] --file-name FILE_NAME\n#                                      [--output-path OUTPUT_PATH] [--camera-name CAMERA_NAME]\n#                                      [--view-name {rgb,left,right,disparity}] [--disparity-scale DISPARITY_SCALE]\n#                                      [--video-to-jpg]\n#\n# optional arguments:\n#   -h, --help            show this help message and exit\n#   --file-name FILE_NAME\n#                         Path to the `events.bin` file.\n#   --output-path OUTPUT_PATH\n#                         Path to the folder where converted data will be written.\n#   --camera-name CAMERA_NAME\n#                         The name of the camera to visualize. Default: oak0.\n#   --view-name {rgb,left,right,disparity}\n#                         The name of the camera view to visualize. Default: rbg.\n#   --disparity-scale DISPARITY_SCALE\n#                         Scale for amplifying disparity color mapping. Default: 1.\n#   --video-to-jpg        Use this flag to convert video .bin files to a series of jpg images.\n#                         Default is mp4.\n"})}),"\n",(0,i.jsxs)(n.p,{children:["For instance, you can change the camera that is played back from the default of ",(0,i.jsx)(n.code,{children:"oak0"}),". E.g.,"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python main.py --file-name events_09162022160753_000000.bin --camera-name oak1\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can convert video logs to a stream of jpg images, rather than the default mp4 videos."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python main.py --file-name events_09162022160753_000000.bin --camera-name oak1 --video-to-jpg\n"})}),"\n",(0,i.jsx)(n.p,{children:'Or you can convert a "snapshot" log to one jpg per view.'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"python main.py --file-name cpy_data/farm_ng/2023_01_06_13_24_33_445932_snapshot_b42d218.bin --video-to-jpg\n"})}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsxs)(n.p,{children:["Video logs will not convert if the ",(0,i.jsx)(n.code,{children:"--snapshot"})," flag is used.\nSimilarly, snapshot logs will not convert if the ",(0,i.jsx)(n.code,{children:"--snapshot"})," flag is not used."]})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,a)=>{a.d(n,{Z:()=>o,a:()=>r});var i=a(7294);const t={},l=i.createContext(t);function r(e){const n=i.useContext(l);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(l.Provider,{value:n},e.children)}}}]);