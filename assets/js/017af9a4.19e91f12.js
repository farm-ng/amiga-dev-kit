"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[7806],{2330:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>c,toc:()=>o});var t=i(4848),s=i(8453);const r={id:"multi-client-subscriber",title:"Multi Client Subscriber"},a=void 0,c={id:"examples/multi_client_subscriber/multi-client-subscriber",title:"Multi Client Subscriber",description:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:",source:"@site/docs/examples/multi_client_subscriber/README.md",sourceDirName:"examples/multi_client_subscriber",slug:"/examples/multi_client_subscriber/",permalink:"/docs/examples/multi_client_subscriber/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/examples/multi_client_subscriber/README.md",tags:[],version:"current",frontMatter:{id:"multi-client-subscriber",title:"Multi Client Subscriber"},sidebar:"examples",previous:{title:"Drive a Square",permalink:"/docs/examples/square_track/"},next:{title:"Multi Client GeoImage",permalink:"/docs/examples/multi_client_geoimage/"}},l={},o=[{value:"1. Install the farm-ng Brain ADK package",id:"1-install-the-farm-ng-brain-adk-package",level:3},{value:"2. Install the example&#39;s dependencies",id:"2-install-the-examples-dependencies",level:3},{value:"3. Create a client wrapper",id:"3-create-a-client-wrapper",level:3},{value:"4. Run the client",id:"4-run-the-client",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.admonition,{title:"Basic Knowledge Requirements",type:"info",children:[(0,t.jsx)(n.p,{children:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:"}),(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Python Programming"}),": It's important to have a good grasp of Python, especially with concepts\nlike ",(0,t.jsx)(n.code,{children:"functions"}),", ",(0,t.jsx)(n.code,{children:"loops"}),", and ",(0,t.jsx)(n.code,{children:"classes"}),", since the example utilizes these fundamentals."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Asynchronous Programming with asyncio"}),": Familiarity with Python's asyncio for writing concurrent\ncode using the ",(0,t.jsx)(n.code,{children:"async/await"})," syntax."]}),"\n"]})]}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/py/examples/multi_client_subscriber/main.py",children:(0,t.jsx)(n.strong,{children:"Multi Client Subscriber"})}),"\nexample shows how to create a multi client application that can be subscribed concurrently\nto different services."]}),"\n",(0,t.jsxs)(n.p,{children:["You can either run this example directly on a brain by ",(0,t.jsx)(n.code,{children:"ssh"}),"'ing in, or use your local PC.\nTo successfully run this example, ensure that a ",(0,t.jsx)(n.a,{href:"/docs/brain/",children:(0,t.jsx)(n.strong,{children:"farm-ng brain"})})," running\nthe Canbus and Filter services. Your local PC should be either connected to the same local\nnetwork as the brain or linked to it through ",(0,t.jsxs)(n.a,{href:"https://tailscale.com/",children:[(0,t.jsx)(n.strong,{children:"tailscale"}),"."]})]}),"\n",(0,t.jsxs)(n.h3,{id:"1-install-the-farm-ng-brain-adk-package",children:["1. Install the ",(0,t.jsx)(n.a,{href:"/docs/brain/brain-install",children:"farm-ng Brain ADK package"})]}),"\n",(0,t.jsx)(n.h3,{id:"2-install-the-examples-dependencies",children:"2. Install the example's dependencies"}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsx)(n.p,{children:"It is recommended to also install these dependencies and run the\nexample in the brain ADK virtual environment."})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# assuming you're already in the amiga-dev-kit/ directory\ncd farm-ng-amiga/py/examples/multi_client_subscriber\n"})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"pip3 install -r requirements.txt\n"})}),"\n",(0,t.jsx)(n.h3,{id:"3-create-a-client-wrapper",children:"3. Create a client wrapper"}),"\n",(0,t.jsxs)(n.p,{children:["The first step is to create a client wrapper that will allow us to easily interact with\nthe services. We create a ",(0,t.jsx)(n.code,{children:"MultiClientSubscriber"})," class that will encapsulate a\n",(0,t.jsx)(n.code,{children:"EventClient"})," classes corresponding to each service. The ",(0,t.jsx)(n.code,{children:"MultiClientSubscriber"})," class\nwill have a method called ",(0,t.jsx)(n.code,{children:"subscribe"})," that will allow us to subscribe to the particular\nservice given a ",(0,t.jsx)(n.code,{children:"SubscribeRequest"}),". The ",(0,t.jsx)(n.code,{children:"SubscribeRequest"})," contains the URI of the\nservice to subscribe to."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'class MultiClientSubscriber:\n    """Example of subscribing to events from multiple clients."""\n\n    def __init__(self, service_config: EventServiceConfigList) -> None:\n        """Initialize the multi-client subscriber.\n\n        Args:\n            service_config: The service config.\n        """\n        self.service_config = service_config\n        self.clients: dict[str, EventClient] = {}\n\n        # populate the clients\n        config: EventServiceConfig\n        for config in self.service_config.configs:\n            if not config.port:\n                self.subscriptions = config.subscriptions\n                continue\n            self.clients[config.name] = EventClient(config)\n\n    async def _subscribe(self, subscription: SubscribeRequest) -> None:\n        # the client name is the last part of the query\n        client_name: str = subscription.uri.query.split("=")[-1]\n        client: EventClient = self.clients[client_name]\n        # subscribe to the event\n        # NOTE: set decode to True to decode the message\n        async for event, message in client.subscribe(subscription, decode=False):\n            # decode the message type\n            message_type = event.uri.query.split("&")[0].split("=")[-1]\n            print(f"Received event from {client_name}{event.uri.path}: {message_type}")\n\n    async def run(self) -> None:\n        # start the subscribe routines\n        tasks: list[asyncio.Task] = []\n        for subscription in self.subscriptions:\n            tasks.append(asyncio.create_task(self._subscribe(subscription)))\n        # wait for the subscribe routines to finish\n        await asyncio.gather(*tasks)\n'})}),"\n",(0,t.jsxs)(n.p,{children:["In addition, we provide a ",(0,t.jsx)(n.code,{children:"config.json"})," file example that contains the configuration of the\nservice. The ",(0,t.jsx)(n.code,{children:"config.json"})," file contains the following fields:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "configs": [\n    {\n      "name": "canbus",\n      "port": 6001,\n      "host": "localhost"\n    },\n    {\n      "name": "filter",\n      "port": 20001,\n      "host": "localhost"\n    },\n    {\n      "name": "multi_subscriber",\n      "subscriptions": [\n        {\n          "uri": {\n            "path": "*",\n            "query": "service_name=canbus"\n          },\n          "every_n": 1\n        },\n        {\n          "uri": {\n            "path": "*",\n            "query": "service_name=filter"\n          },\n          "every_n": 1\n        }\n      ]\n    }\n  ]\n}\n'})}),"\n",(0,t.jsx)(n.h2,{id:"4-run-the-client",children:"4. Run the client"}),"\n",(0,t.jsxs)(n.admonition,{type:"info",children:[(0,t.jsxs)(n.p,{children:["To run this script from your PC, you need to update the ",(0,t.jsx)(n.code,{children:"service_config.json"}),"\nby modifying the ",(0,t.jsx)(n.code,{children:"host"})," field with your Amiga brain name."]}),(0,t.jsxs)(n.p,{children:["Please check out ",(0,t.jsx)(n.a,{href:"/docs/concepts/system_overview/#where-to-run-the-examples",children:"Amiga Development 101"}),"\nfor more details."]})]}),"\n",(0,t.jsx)(n.p,{children:"In a terminal, run the client:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python main.py --config config.json\n"})}),"\n",(0,t.jsx)(n.p,{children:"you should see the following output:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"Received event from filter/state: farm_ng.filter.proto.FilterState\nReceived event from canbus/twist: farm_ng.canbus.proto.Twist2d\nReceived event from canbus/raw_messages: farm_ng.canbus.proto.RawCanbusMessages\nReceived event from canbus/motor_states: farm_ng.canbus.proto.MotorStates\nReceived event from canbus/raw_messages: farm_ng.canbus.proto.RawCanbusMessages\nReceived event from canbus/motor_states: farm_ng.canbus.proto.MotorStates\nReceived event from filter/state: farm_ng.filter.proto.FilterState\nReceived event from filter/state: farm_ng.filter.proto.FilterState\nReceived event from canbus/raw_messages: farm_ng.canbus.proto.RawCanbusMessages\nReceived event from filter/state: farm_ng.filter.proto.FilterState\nReceived event from canbus/health: google.protobuf.Struct\n"})}),"\n",(0,t.jsx)(n.admonition,{type:"tip",children:(0,t.jsxs)(n.p,{children:["We highly recommend to have some basic knowledge about\n",(0,t.jsx)(n.a,{href:"https://docs.python.org/3/library/asyncio.html",children:(0,t.jsx)(n.strong,{children:(0,t.jsx)(n.code,{children:"asyncio"})})}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>c});var t=i(6540);const s={},r=t.createContext(s);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);