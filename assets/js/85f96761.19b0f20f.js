"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[795],{54462:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>a});var r=i(74848),s=i(28453);const t={sidebar_label:"version",title:"utils.version"},o=void 0,c={id:"reference/circuitpy/utils/version",title:"utils.version",description:"Update values following semantic versioning convention.",source:"@site/docs/reference/circuitpy/utils/version.md",sourceDirName:"reference/circuitpy/utils",slug:"/reference/circuitpy/utils/version",permalink:"/docs/reference/circuitpy/utils/version",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/circuitpy/utils/version.md",tags:[],version:"current",frontMatter:{sidebar_label:"version",title:"utils.version"},sidebar:"Developer",previous:{title:"ticks",permalink:"/docs/reference/circuitpy/utils/ticks"},next:{title:"packet",permalink:"/docs/reference/brain/canbus/packet"}},l={},a=[{value:"asserts",id:"asserts",level:4},{value:"version_tuple",id:"version_tuple",level:4},{value:"version_string",id:"version_string",level:4},{value:"BoardType Objects",id:"boardtype-objects",level:2},{value:"get_board_type",id:"get_board_type",level:4}];function d(e){const n={code:"code",h2:"h2",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:"Update values following semantic versioning convention."}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"MAJOR: Major version"}),"\n",(0,r.jsx)(n.li,{children:"MINOR: Minor version"}),"\n",(0,r.jsx)(n.li,{children:"PATCH: Patch version"}),"\n",(0,r.jsx)(n.li,{children:"DEV: Boolean indicating it is a development release"}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"asserts",children:"asserts"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def asserts()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enforces version."}),"\n",(0,r.jsx)(n.h4,{id:"version_tuple",children:"version_tuple"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def version_tuple()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns tuple containing firmware version."}),"\n",(0,r.jsx)(n.h4,{id:"version_string",children:"version_string"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def version_string()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Returns string containing firmware version."}),"\n",(0,r.jsx)(n.h2,{id:"boardtype-objects",children:"BoardType Objects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"class BoardType()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Enum representing the Amiga Board type (where Amiga application layer is running)."}),"\n",(0,r.jsx)(n.h4,{id:"get_board_type",children:"get_board_type"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"def get_board_type()\n"})}),"\n",(0,r.jsx)(n.p,{children:"Return the Board type based on the operating system."})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>c});var r=i(96540);const s={},t=r.createContext(s);function o(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);