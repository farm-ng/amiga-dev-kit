"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[346],{5032:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=n(5893),t=n(1151);const r={sidebar_label:"general",title:"utils.general"},a=void 0,c={id:"reference/circuitpy/utils/general",title:"utils.general",description:"path\\_dirname",source:"@site/docs/reference/circuitpy/utils/general.md",sourceDirName:"reference/circuitpy/utils",slug:"/reference/circuitpy/utils/general",permalink:"/docs/reference/circuitpy/utils/general",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/circuitpy/utils/general.md",tags:[],version:"current",frontMatter:{sidebar_label:"general",title:"utils.general"},sidebar:"api",previous:{title:"cobid",permalink:"/docs/reference/circuitpy/utils/cobid"},next:{title:"io",permalink:"/docs/reference/circuitpy/utils/io"}},l={},d=[{value:"path_dirname",id:"path_dirname",level:4},{value:"path_split",id:"path_split",level:4},{value:"path_exists",id:"path_exists",level:4},{value:"path_join",id:"path_join",level:4},{value:"path_basename",id:"path_basename",level:4},{value:"makedirs",id:"makedirs",level:4},{value:"remove_all",id:"remove_all",level:4},{value:"clip",id:"clip",level:4},{value:"rescale",id:"rescale",level:4},{value:"trigger_soft_reset",id:"trigger_soft_reset",level:4},{value:"trigger_hard_reset",id:"trigger_hard_reset",level:4},{value:"ticks_add",id:"ticks_add",level:4},{value:"ticks_diff",id:"ticks_diff",level:4},{value:"ticks_less",id:"ticks_less",level:4},{value:"ticks_fresh",id:"ticks_fresh",level:4},{value:"DtTracker Objects",id:"dttracker-objects",level:2},{value:"age",id:"age",level:4},{value:"ticks_age",id:"ticks_age",level:4},{value:"ticks_age_cumul",id:"ticks_age_cumul",level:4},{value:"start",id:"start",level:4},{value:"stop",id:"stop",level:4},{value:"update_history",id:"update_history",level:4},{value:"update",id:"update",level:4},{value:"mean_dt",id:"mean_dt",level:4},{value:"minmeanmax",id:"minmeanmax",level:4},{value:"TickRepeater Objects",id:"tickrepeater-objects",level:2},{value:"check",id:"check",level:4},{value:"reset",id:"reset",level:4},{value:"update",id:"update-1",level:4},{value:"Repeater Objects",id:"repeater-objects",level:2},{value:"CatchupRepeater Objects",id:"catchuprepeater-objects",level:2},{value:"Axis Objects",id:"axis-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"map",id:"map",level:4}];function h(e){const s={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h4,{id:"path_dirname",children:"path_dirname"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def path_dirname(p: str)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Returns the directory component of a pathname."}),"\n",(0,i.jsx)(s.h4,{id:"path_split",children:"path_split"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def path_split(p)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Split a pathname."}),"\n",(0,i.jsx)(s.p,{children:'Returns tuple "(head, tail)" where "tail" is everything after the final slash.  Either part may be empty.'}),"\n",(0,i.jsx)(s.h4,{id:"path_exists",children:"path_exists"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def path_exists(p)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return True if path exists."}),"\n",(0,i.jsx)(s.h4,{id:"path_join",children:"path_join"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def path_join(parent: str, child: str)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Joins parent and child path."}),"\n",(0,i.jsx)(s.h4,{id:"path_basename",children:"path_basename"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def path_basename(p: str)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Returns the final component of a pathname."}),"\n",(0,i.jsx)(s.h4,{id:"makedirs",children:"makedirs"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def makedirs(name, exist_ok=False)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Wraps makedirs(name [, mode=0o777][, exist_ok=False])."}),"\n",(0,i.jsx)(s.p,{children:"Super-mkdir; create a leaf directory and all intermediate ones.  Works like mkdir, except that any intermediate path\nsegment (not just the rightmost) will be created if it does not exist. If the target directory already exists, raise\nan OSError if exist_ok is False. Otherwise no exception is raised.  This is recursive."}),"\n",(0,i.jsx)(s.h4,{id:"remove_all",children:"remove_all"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def remove_all(name)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Recursively remove paths."}),"\n",(0,i.jsx)(s.h4,{id:"clip",children:"clip"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def clip(x, min_value, max_value)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return value, within bounds [min,max]"}),"\n",(0,i.jsx)(s.h4,{id:"rescale",children:"rescale"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def rescale(x, x0, x1, y0, y1)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Rescale x from (x0, x1) to (y0, y1), with clipping."}),"\n",(0,i.jsx)(s.h4,{id:"trigger_soft_reset",children:"trigger_soft_reset"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def trigger_soft_reset()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Equivalent of CTRL+D."}),"\n",(0,i.jsx)(s.h4,{id:"trigger_hard_reset",children:"trigger_hard_reset"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def trigger_hard_reset()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Equivalent of power cycle / reset button."}),"\n",(0,i.jsx)(s.h4,{id:"ticks_add",children:"ticks_add"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_add(ticks, delta)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Add a delta to a base number of ticks, performing wraparound at 2**29ms."}),"\n",(0,i.jsx)(s.h4,{id:"ticks_diff",children:"ticks_diff"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_diff(ticks1, ticks2)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Compute the signed difference between two ticks values, assuming that they are within 2**29 ticks"}),"\n",(0,i.jsx)(s.h4,{id:"ticks_less",children:"ticks_less"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_less(ticks1, ticks2)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Return true iff ticks1 is less than ticks2, assuming that they are within 2**29 ticks"}),"\n",(0,i.jsx)(s.h4,{id:"ticks_fresh",children:"ticks_fresh"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_fresh(ticks, thresh_ms=1000)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Returns true if age of ticks is less than thresh_ms, assuming within 2**29 ticks of current ticks_ms()"}),"\n",(0,i.jsx)(s.h2,{id:"dttracker-objects",children:"DtTracker Objects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class DtTracker()\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Used for tracking multiple timeseries, differentiated by ",(0,i.jsx)(s.code,{children:"name"})," parameter passed to constructor."]}),"\n",(0,i.jsx)(s.h4,{id:"age",children:"age"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def age(_ticks_ms)\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Returns time in ms from last ",(0,i.jsx)(s.code,{children:"update()"})," to _ticks_ms."]}),"\n",(0,i.jsx)(s.h4,{id:"ticks_age",children:"ticks_age"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_age() -> int\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Returns time in ms since last ",(0,i.jsx)(s.code,{children:"update()"})," Updates the time tracker."]}),"\n",(0,i.jsx)(s.h4,{id:"ticks_age_cumul",children:"ticks_age_cumul"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def ticks_age_cumul() -> int\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Returns time in ms since last ",(0,i.jsx)(s.code,{children:"update()"})," Does NOT update the time tracker."]}),"\n",(0,i.jsx)(s.h4,{id:"start",children:"start"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def start(_ticks_ms=None)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Start the time tracker."}),"\n",(0,i.jsx)(s.h4,{id:"stop",children:"stop"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def stop(_ticks_ms=None)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Stop the time tracker."}),"\n",(0,i.jsx)(s.h4,{id:"update_history",children:"update_history"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def update_history(dt_ms)\n"})}),"\n",(0,i.jsx)(s.p,{children:"Addend dt history with dt_ms."}),"\n",(0,i.jsx)(s.h4,{id:"update",children:"update"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def update()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Reset the time tracker."}),"\n",(0,i.jsx)(s.h4,{id:"mean_dt",children:"mean_dt"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def mean_dt()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Returns mean of the dt_history."}),"\n",(0,i.jsx)(s.h4,{id:"minmeanmax",children:"minmeanmax"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def minmeanmax()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Returns string with min, mean, & max of the dt_history."}),"\n",(0,i.jsx)(s.h2,{id:"tickrepeater-objects",children:"TickRepeater Objects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class TickRepeater()\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Used as a timer, with the check() method returning true every ",(0,i.jsx)(s.code,{children:"ticks_period_ms"})," Uses ",(0,i.jsx)(s.code,{children:"ticks_ms"}),", which wraps\nevery 2^29 ms (~6.2 days). The logic handles a single wrap between checks, but does not handle two wraps\nbetween checks."]}),"\n",(0,i.jsxs)(s.p,{children:["See CircuitPython ",(0,i.jsx)(s.code,{children:"supervisor.ticks_ms()"})," docs for more details."]}),"\n",(0,i.jsx)(s.h4,{id:"check",children:"check"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def check()\n"})}),"\n",(0,i.jsx)(s.p,{children:"This is the recommended method to use for checking the TickRepeater timer."}),"\n",(0,i.jsxs)(s.p,{children:["Wraps the ",(0,i.jsx)(s.code,{children:"update()"})," method."]}),"\n",(0,i.jsx)(s.h4,{id:"reset",children:"reset"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def reset()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Reset the timer to start from the current time."}),"\n",(0,i.jsx)(s.h4,{id:"update-1",children:"update"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def update(ticks)\n"})}),"\n",(0,i.jsxs)(s.p,{children:["Returns ",(0,i.jsx)(s.code,{children:"False"})," unless ",(0,i.jsx)(s.code,{children:"ticks_period_ms"})," has past, as compared to previous checkpoint."]}),"\n",(0,i.jsxs)(s.p,{children:["Updates to next checkpoint when ",(0,i.jsx)(s.code,{children:"True"})," is returned"]}),"\n",(0,i.jsx)(s.h2,{id:"repeater-objects",children:"Repeater Objects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class Repeater()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Only for backwards compatibility Replaces for old time.monotonic() Repeater by wrapping current\nTickRepeater."}),"\n",(0,i.jsx)(s.h2,{id:"catchuprepeater-objects",children:"CatchupRepeater Objects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class CatchupRepeater()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Only for backwards compatibility Replaces for old time.monotonic() CatchupRepeater by wrapping current\nTickRepeater."}),"\n",(0,i.jsx)(s.h2,{id:"axis-objects",children:"Axis Objects"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"class Axis()\n"})}),"\n",(0,i.jsx)(s.p,{children:"Used for mapping joysticks."}),"\n",(0,i.jsx)(s.h4,{id:"__init__",children:"__init__"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def __init__(min, dz_neg, dz_pos, max)\n"})}),"\n",(0,i.jsx)(s.p,{children:"min, -deadzone, +deadzone, max."}),"\n",(0,i.jsx)(s.h4,{id:"map",children:"map"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-python",children:"def map(v)\n"})}),"\n",(0,i.jsx)(s.p,{children:"returns value mapped to range [-1, +1]"})]})}function p(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>c,a:()=>a});var i=n(7294);const t={},r=i.createContext(t);function a(e){const s=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:s},e.children)}}}]);