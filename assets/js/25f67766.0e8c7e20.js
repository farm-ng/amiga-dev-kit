"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[1471],{2572:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var i=t(5893),r=t(1151);const n={id:"amiga-dev",title:"Amiga Development 101"},o="Amiga Development 101",a={id:"concepts/system_overview/amiga-dev",title:"Amiga Development 101",description:"Welcome to the world of Amiga robot development!",source:"@site/docs/concepts/system_overview/README.md",sourceDirName:"concepts/system_overview",slug:"/concepts/system_overview/",permalink:"/docs/concepts/system_overview/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/concepts/system_overview/README.md",tags:[],version:"current",frontMatter:{id:"amiga-dev",title:"Amiga Development 101"},sidebar:"Concepts",previous:{title:"Concepts Index",permalink:"/docs/concepts/"},next:{title:"Transforms & Poses",permalink:"/docs/concepts/transforms_and_poses/"}},c={},l=[{value:"What are Services?",id:"what-are-services",level:2},{value:"Why Are Services Necessary?",id:"why-are-services-necessary",level:2},{value:"The Heartbeat of Amiga: Key Services",id:"the-heartbeat-of-amiga-key-services",level:2},{value:"How Do Services Talk to Each Other?",id:"how-do-services-talk-to-each-other",level:2},{value:"Architectural Diagram",id:"architectural-diagram",level:2}];function h(e){const s={a:"a",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,r.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"amiga-development-101",children:"Amiga Development 101"}),"\n",(0,i.jsx)(s.p,{children:"Welcome to the world of Amiga robot development!\nIf you're excited about harnessing the power of the Brain and the Amiga platform,\nyou've come to the right place.\nThis guide is designed to give you a bird's-eye view of how various services run on the Brain\nwork in harmony to power the Amiga."}),"\n",(0,i.jsx)(s.h2,{id:"what-are-services",children:"What are Services?"}),"\n",(0,i.jsx)(s.p,{children:"In the realm of robot development, a service can be thought of as a specialized program or\nroutine that performs a specific function.\nFor the Amiga robot, each service handles a unique aspect of the robot's operation, from processing\nimagery to managing movement.\nThey're the cogs that make the Amiga machine tick."}),"\n",(0,i.jsx)(s.h2,{id:"why-are-services-necessary",children:"Why Are Services Necessary?"}),"\n",(0,i.jsx)(s.p,{children:"Services modularize robot functions.\nInstead of having one colossal program trying to manage everything the robot does,\nwe break down tasks into individual services.\nThis approach has several advantages:"}),"\n",(0,i.jsxs)(s.ol,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Scalability"}),": As the robot's capabilities grow, new services can be added without\ndisturbing existing ones."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Maintainability"}),": If there's a bug or an issue, it's isolated to a particular service,\nmaking troubleshooting easier."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.strong,{children:"Efficiency"}),": Services can run concurrently, utilizing the multi-core capabilities of\nplatforms like the Brain."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"the-heartbeat-of-amiga-key-services",children:"The Heartbeat of Amiga: Key Services"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/canbus_service/",children:(0,i.jsx)(s.strong,{children:"Canbus"})}),": Manages the robot's motors.\nIt's like the nervous system, transmitting movement commands and receiving feedback."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/oak_service/",children:(0,i.jsx)(s.strong,{children:"Oak"})}),": The eyes and balance of the robot.\nIt streams imagery and provides IMU data, crucial for services like Filter and Track Follower."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/gps_service/",children:(0,i.jsx)(s.strong,{children:"GPS"})}),": The robot's global positioning sense.\nIt knows where the Amiga is in the world."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/filter_service/",children:(0,i.jsx)(s.strong,{children:"Filter (UKF)"})}),": Acts as the robot's sense of self-awareness.\nBy using IMU data from the OAK service, wheel odometry from CANBUS, and global positioning from GPS,\nit estimates the state of the robot."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/recorder_service/",children:(0,i.jsx)(s.strong,{children:"Recorder"})}),": The memory of the robot.\nIt logs data, ensuring we can revisit past operations or analyze performance."]}),"\n",(0,i.jsxs)(s.li,{children:[(0,i.jsx)(s.a,{href:"/docs/concepts/track_follower_service/",children:(0,i.jsx)(s.strong,{children:"Track Follower"})}),": The brain of the operation.\nIt uses algorithms like pure pursuit and PID to guide the Amiga.\nIt makes decisions based on data from other services."]}),"\n"]}),"\n",(0,i.jsx)(s.h2,{id:"how-do-services-talk-to-each-other",children:"How Do Services Talk to Each Other?"}),"\n",(0,i.jsx)(s.p,{children:"Imagine a bustling city where everyone has a job. The mail carrier brings letters (data),\nthe traffic cop (Track Follower) guides vehicles (services),\nand everyone communicates to ensure the city runs smoothly.\nSimilarly, in the Amiga ecosystem:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.strong,{children:"OAK"})," service streams visual and IMU data."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.strong,{children:"Filter"})," service uses IMU data from OAK, wheel odometry from CANBUS, and global positioning\ndata from GPS to understand how the robot is moving."]}),"\n",(0,i.jsxs)(s.li,{children:["The ",(0,i.jsx)(s.strong,{children:"Track Follower"})," takes this movement data, combines it with its algorithms, and decides\nthe best way to move the robot."]}),"\n",(0,i.jsxs)(s.li,{children:["This decision is then passed to ",(0,i.jsx)(s.strong,{children:"CANBUS"}),", which communicates with the robot's motors to\nexecute the movement."]}),"\n"]}),"\n",(0,i.jsx)(s.p,{children:"All these services run on the powerful Brain, allowing for efficient and concurrent operations."}),"\n",(0,i.jsx)(s.h2,{id:"architectural-diagram",children:"Architectural Diagram"}),"\n",(0,i.jsxs)(s.p,{children:["Below is the architectural diagram that visually represents how these services interact:\n",(0,i.jsx)(s.img,{src:"https://github.com/farm-ng/amiga-dev-kit/assets/5157099/a7d5d95f-a94d-40a9-8df0-3c0c9084c2fa",alt:"amiga_brain-1"})]}),"\n",(0,i.jsx)(s.p,{children:"This introduction is designed to be a primer.\nEach service has its depths and intricacies, which you'll uncover as you dive deeper into Amiga development.\nEnjoy the journey!"})]})}function d(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},1151:(e,s,t)=>{t.d(s,{Z:()=>a,a:()=>o});var i=t(7294);const r={},n=i.createContext(r);function o(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);