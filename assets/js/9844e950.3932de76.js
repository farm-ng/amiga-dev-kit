"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1622],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),h=r,m=d["".concat(s,".").concat(h)]||d[h]||u[h]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5996:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const i={id:"brain-apps",title:"Developing Custom Applications"},o="Developing Custom Applications",l={unversionedId:"brain/brain-apps",id:"brain/brain-apps",title:"Developing Custom Applications",description:"Quick Tips",source:"@site/docs/brain/custom-applications.md",sourceDirName:"brain",slug:"/brain/brain-apps",permalink:"/docs/brain/brain-apps",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/brain/custom-applications.md",tags:[],version:"current",frontMatter:{id:"brain-apps",title:"Developing Custom Applications"},sidebar:"docs",previous:{title:"Install",permalink:"/docs/brain/brain-install"},next:{title:"Basic Electronics Tool Kit",permalink:"/docs/hardware-tools/etools"}},s={},p=[{value:"Quick Tips",id:"quick-tips",level:4},{value:"Initial Configuration",id:"initial-configuration",level:4},{value:"Live Code Syncing",id:"live-code-syncing",level:4}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"developing-custom-applications"},"Developing Custom Applications"),(0,r.kt)("h4",{id:"quick-tips"},"Quick Tips"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},'The Amiga user is able to install APT packages. Edit the "entry.sh" script in the sample git repository.'),(0,r.kt)("li",{parentName:"ul"},"We leverage a venv per application. The contents of requirements.txt will be installed by the bootstrap.sh script."),(0,r.kt)("li",{parentName:"ul"},'If you\'ve updated the requirements.txt remove the hidden ".lock" before relaunching the app from the Brain UI.'),(0,r.kt)("li",{parentName:"ul"},"You may use VSCode remote development/containers to edit directly on the Amiga brain as well.")),(0,r.kt)("h4",{id:"initial-configuration"},"Initial Configuration"),(0,r.kt)("p",null,"To make ssh easier, we'll add some configuration to our ssh on the workstation."),(0,r.kt)("p",null,"First add the following to your .ssh/config utilizing the IP addess displayed on the bottom right of the brain display:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"Host amiga\n    HostName <ip address>\n    Port 22\n    User amiga\n    StrictHostKeyChecking no\n")),(0,r.kt)("p",null,"Let\u2019s copy our keys to the robot as well (you may need to do this any time you are working with a new robot)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    ssh-copy-id amiga\n")),(0,r.kt)("p",null,"Now you can ssh to the robot with:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    ssh amiga\n    exit\n")),(0,r.kt)("p",null,'Open the "Hello World" workspace by ... You may use an alternate editor of your choice. If you do, the sample application for publishing an app is located at amiga-dev-kit/brain/examples/hello '),(0,r.kt)("p",null,"Using a terminal window, change to the git repository file cloned above. "),(0,r.kt)("h4",{id:"live-code-syncing"},"Live Code Syncing"),(0,r.kt)("p",null,"Now we'll start a synchronization session that will mirror the code in this directory to an Apps directory (/data/apps) on the Amiga Brain. Note: This directory is persistent across reboots."),(0,r.kt)("p",null,"Our current sync process leverages Mutagen, the sync.sh script will set this up for you. Please provide your sudo password if required. This will copy the Mutagen binary and agents to your local filesystem.\nAdditional documentation regarding Mutagen may be viewed at: ",(0,r.kt)("a",{parentName:"p",href:"https://mutagen.io/documentation/introduction"},"Mutagen"),"."),(0,r.kt)("p",null,"To start the synchronization process in the background:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    ./sync.sh -s start\n")),(0,r.kt)("p",null,"To stop the synchronization process:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    ./sync.sh -s stop\n")),(0,r.kt)("p",null,"Finally to view the status:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"    ./sync.sh -s status\n")),(0,r.kt)("p",null,"While the sync process is running, any changes are mirrored to the Amiga Brain."),(0,r.kt)("p",null,'To test this process out, now that the current directory amiga-dev-kit/brain/examples/hello is being synchronized to your brain, lets trigger a refresh of the currently loaded apps by clicking on the "home" icon near the top right.'),(0,r.kt)("p",null,'Click on the new app labeled "Hello" on the Amiga Brain. After a brief moment (bootstrapping the app) the app wil load and you\'ll be greeting a a simple UI app. Close the app by clicking "Exit".'),(0,r.kt)("p",null,'On your workstation, open the "main.py" file in an editor and change the value for YOUR_NAME to be your name (i.e. joe dirt). Save the file and relaunch the app from the Amiga Brain. The text will now reflect your changes.'))}u.isMDXComponent=!0}}]);