"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[3834],{1008:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>d});var s=t(5893),o=t(1151);const r={id:"tracks-and-waypoints",title:"Tracks & Waypoints"},a=void 0,i={id:"concepts/tracks_and_waypoints/tracks-and-waypoints",title:"Tracks & Waypoints",description:"Understanding Transforms & Poses",source:"@site/docs/concepts/tracks_and_waypoints/README.md",sourceDirName:"concepts/tracks_and_waypoints",slug:"/concepts/tracks_and_waypoints/",permalink:"/docs/concepts/tracks_and_waypoints/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/concepts/tracks_and_waypoints/README.md",tags:[],version:"current",frontMatter:{id:"tracks-and-waypoints",title:"Tracks & Waypoints"},sidebar:"Developer",previous:{title:"Transforms & Poses",permalink:"/docs/concepts/transforms_and_poses/"},next:{title:"Amiga",permalink:"/docs/concepts/amiga_service/"}},c={},d=[{value:"Understanding Transforms &amp; Poses",id:"understanding-transforms--poses",level:2},{value:"Creating and Propagating Poses for the Track Follower",id:"creating-and-propagating-poses-for-the-track-follower",level:2},{value:"Example",id:"example",level:3},{value:"Code Breakdown",id:"code-breakdown",level:3},{value:"Next Steps",id:"next-steps",level:2}];function l(e){const n={a:"a",code:"code",em:"em",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"understanding-transforms--poses",children:"Understanding Transforms & Poses"}),"\n",(0,s.jsxs)(n.p,{children:["Before we can send our robot out to drive a ",(0,s.jsx)(n.strong,{children:"track"})," (or ",(0,s.jsx)(n.strong,{children:"path"}),"),\nwe need to understand where our robot is and where we want to send it.\nFor that purposes, please refer to ",(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/docs/concepts/transforms_and_poses",children:"Concepts - Transforms & Poses"})}),"\nbefore continuing on with this overview."]}),"\n",(0,s.jsx)(n.h2,{id:"creating-and-propagating-poses-for-the-track-follower",children:"Creating and Propagating Poses for the Track Follower"}),"\n",(0,s.jsxs)(n.p,{children:["When you want the Amiga to perform a specific movement, you need to provide it with a series\nof poses that describe that movement.\nWe call these poses ",(0,s.jsx)(n.strong,{children:"waypoints"})," and the series of them a ",(0,s.jsxs)(n.em,{children:[(0,s.jsx)(n.em,{children:"track"}),"."]})]}),"\n",(0,s.jsxs)(n.p,{children:["For a better understanding of the ",(0,s.jsx)(n.code,{children:"Pose"})," structure, please refer to our\n",(0,s.jsxs)(n.a,{href:"/docs/concepts/transforms_and_poses/#the-farm-ng-pose-proto",children:[(0,s.jsx)(n.code,{children:"Pose"})," proto overview"]}),"."]}),"\n",(0,s.jsx)(n.h3,{id:"example",children:"Example"}),"\n",(0,s.jsxs)(n.p,{children:["There are several ways of creating poses and commanding your ",(0,s.jsx)(n.code,{children:"track_follower"})," to follow them.\nLet's check how to use the concepts learned here to create poses that represent a ",(0,s.jsx)(n.code,{children:"pi turn"}),"\n(also know as a U turn) using the ",(0,s.jsx)(n.code,{children:"pose"})," structure:"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"NOTE"}),": Please note that in this example we propagate the proposes from the robot frame."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'def create_pi_turn_segment(\n    previous_pose: Pose3F64, next_frame_b: str, radius: float, spacing: float = 0.1\n) -> list[Pose3F64]:\n    """Compute a pi turn segment.\n\n    Args:\n        previous_pose (Pose3F64): The previous pose.\n        next_frame_b (str): The name of the child frame of the next pose.\n        radius (float): The radius of the pi turn.\n        spacing (float): The spacing between waypoints, in meters.\n\n    Returns:\n        list[Pose3F64]: The poses of the pi turn segment.\n    """\n    # Calculate the total arc length of the half-circle\n    arc_length = pi * radius\n\n    # Determine the number of segments, ensuring at least one segment\n    num_segments = max(int(arc_length / spacing), 1)\n\n    # Angle increment per segment\n    delta_angle = pi / num_segments\n\n    # Distance increment per segment\n    delta_distance = arc_length / num_segments\n\n    # Create a container to store the track segment waypoints\n    segment_poses: list[Pose3F64] = [previous_pose]\n\n    for i in range(1, num_segments + 1):\n\n        # Calculate the pose for the current segment\n        turn_segment: Pose3F64 = Pose3F64(\n            a_from_b=Isometry3F64([delta_distance, 0, 0], Rotation3F64.Rz(delta_angle)),\n            frame_a=segment_poses[-1].frame_b,\n            frame_b=f"{next_frame_b}_{i-1}",\n        )\n        segment_poses.append(segment_poses[-1] * turn_segment)\n\n    # Rename the last pose to the desired name\n    segment_poses[-1].frame_b = next_frame_b\n    return segment_poses\n'})}),"\n",(0,s.jsx)(n.h3,{id:"code-breakdown",children:"Code Breakdown"}),"\n",(0,s.jsxs)(n.p,{children:["Since we're in the robot frame, we always command it to drive forward, for this reason the ",(0,s.jsx)(n.code,{children:"y"})," and ",(0,s.jsx)(n.code,{children:"z"}),"\ncomponents of our ",(0,s.jsx)(n.code,{children:"Isometry3F64"})," are always zero."]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"The robot moves forward by delta_distance (linear movement along the x-axis)."}),"\n",(0,s.jsx)(n.li,{children:"It rotates by delta_angle about the z-axis."}),"\n",(0,s.jsx)(n.li,{children:"This transformation is then used to calculate the new pose of the robot for that segment."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"In essence, by using Isometry3F64, you're able to succinctly describe both the linear and\nangular movements of the robot for each segment of its pi turn."}),"\n",(0,s.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to check the ",(0,s.jsx)(n.a,{href:"https://amiga.farm-ng.com/docs/concepts/",children:"Concepts"})," page\nto know more about all the services available in your Amiga and how they interact with each other."]}),"\n",(0,s.jsxs)(n.p,{children:["Make sure to also check our ",(0,s.jsx)(n.a,{href:"https://amiga.farm-ng.com/docs/examples/examples-index",children:"Track Follower Examples"}),"\nto test the ",(0,s.jsx)(n.code,{children:"track_follower"})," on your Amiga."]})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,n,t)=>{t.d(n,{Z:()=>i,a:()=>a});var s=t(7294);const o={},r=s.createContext(o);function a(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);