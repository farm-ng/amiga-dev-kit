"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[7256],{7312:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>o,metadata:()=>t,toc:()=>d});var s=n(5893),i=n(1151);const o={id:"recorder-overview",title:"Recorder"},c="Recorder Service Overview",t={id:"concepts/recorder_service/recorder-overview",title:"Recorder",description:"The Recorder App/Service is the backbone of the Amiga's data logging and playback functionality.",source:"@site/docs/concepts/recorder_service/README.md",sourceDirName:"concepts/recorder_service",slug:"/concepts/recorder_service/",permalink:"/docs/concepts/recorder_service/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/concepts/recorder_service/README.md",tags:[],version:"current",frontMatter:{id:"recorder-overview",title:"Recorder"},sidebar:"Developer",previous:{title:"Amiga",permalink:"/docs/concepts/amiga_service/"},next:{title:"GPS",permalink:"/docs/concepts/gps_service/"}},a={},d=[{value:"Purpose",id:"purpose",level:2},{value:"Subscriptions",id:"subscriptions",level:2},{value:"Available Topics for Recording",id:"available-topics-for-recording",level:2},{value:"Recording Profile",id:"recording-profile",level:2},{value:"API",id:"api",level:2},{value:"Data Storage",id:"data-storage",level:2},{value:"How to Use",id:"how-to-use",level:2}];function l(e){const r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.h1,{id:"recorder-service-overview",children:"Recorder Service Overview"}),"\n",(0,s.jsx)(r.p,{children:"The Recorder App/Service is the backbone of the Amiga's data logging and playback functionality.\nIt is designed to capture and store raw data from various robot services, facilitating later\nanalysis, debugging, and model training."}),"\n",(0,s.jsxs)(r.p,{children:["Beginning with ",(0,s.jsx)(r.a,{href:"/docs/release-notes/release-023/",children:(0,s.jsx)(r.strong,{children:"AmigaOS 2.3 Elderberry"})}),",\nthe Recorder service is a sub-service included as part of the ",(0,s.jsx)(r.a,{href:"/docs/concepts/amiga_service",children:(0,s.jsx)(r.strong,{children:"Amiga Service"})}),"."]}),"\n",(0,s.jsx)(r.h2,{id:"purpose",children:"Purpose"}),"\n",(0,s.jsx)(r.p,{children:"The primary objective of the Recorder sub-service is to provide a robust mechanism for recording\ndata streams from different services. This is invaluable for tasks such as training computer\nvision/AI models, where capturing field imagery is essential.\nFor instance, when developing a precision sprayer application for weeds, one would\nfirst traverse the field, recording data to train a model to detect weeds."}),"\n",(0,s.jsx)(r.h2,{id:"subscriptions",children:"Subscriptions"}),"\n",(0,s.jsx)(r.p,{children:"The Recorder Service is a subscriber to the following services:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsx)(r.li,{children:"Canbus"}),"\n",(0,s.jsx)(r.li,{children:"Filter"}),"\n",(0,s.jsx)(r.li,{children:"GPS"}),"\n",(0,s.jsx)(r.li,{children:"Oak (Multiple Oak topics may be available, depending on the number of Oak cameras connected,\ne.g., oak/0, oak/1, ...)"}),"\n",(0,s.jsx)(r.li,{children:"System Monitor"}),"\n",(0,s.jsx)(r.li,{children:"Track Follower"}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"available-topics-for-recording",children:"Available Topics for Recording"}),"\n",(0,s.jsx)(r.p,{children:"The Recorder Service offers a variety of topics that can be recorded.\nEach topic provides specific data streams from the robot's various services.\nHere's a breakdown of each topic:"}),"\n",(0,s.jsxs)(r.admonition,{type:"tip",children:[(0,s.jsxs)(r.p,{children:["Check out the protobuf messages streamed on these topics at:",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(r.a,{href:"https://github.com/farm-ng/farm-ng-amiga/tree/main/protos/farm_ng",children:(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"farm-ng-amiga/protos/"})})}),"."]}),(0,s.jsxs)(r.p,{children:["Some of which may inherit from the protobuf messages found at:",(0,s.jsx)("br",{}),"\n",(0,s.jsx)(r.a,{href:"https://github.com/farm-ng/farm-ng-core/tree/main/protos/farm_ng/core",children:(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"farm-ng-core/protos/"})})})]})]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/docs/concepts/canbus_service/#data-streams",children:"Canbus Topics"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/docs/concepts/filter_service/#data-streams",children:"Filter Topics"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/docs/concepts/gps_service/#data-streams",children:"GPS Topics"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/docs/concepts/oak_service/#data-streams",children:"Oak Topics"})}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:"System Monitor Topics"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"system_monitor/health"}),": Delivers health metrics for the system_monitor service,\nincluding publishing frequency."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"system_monitor/cpu_usage"}),": Streams the percent of CPU currently being consumed on the brain."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"system_monitor/filter_state"}),": Streams the filter service state."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"system_monitor/wifi_state"}),": Streams auto mode state (either true or false)."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"system_monitor/virtual_memory_usage"}),": Streams athe percent of virtual memory being consumed\nby the brain."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsx)(r.p,{children:(0,s.jsx)(r.a,{href:"/docs/concepts/track_follower_service/#data-streams",children:"Track Follower Topics"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.p,{children:"These topics ensure that users have a comprehensive set of data streams to choose from,\ndepending on their specific needs and analysis requirements."}),"\n",(0,s.jsx)(r.h2,{id:"recording-profile",children:"Recording Profile"}),"\n",(0,s.jsxs)(r.p,{children:['To initiate recording, a "Recording profile" must be provided as an argument.\nThis profile is a\n',(0,s.jsx)(r.a,{href:"https://github.com/farm-ng/farm-ng-core/blob/main/protos/farm_ng/core/event_service.proto#L80-L107",children:(0,s.jsx)(r.strong,{children:"EventServiceConfig"})}),"\nprotobuf, detailing the subscriptions or topics to be recorded."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-json",children:'{\n    "name": "my_profile",\n    "subscriptions": [\n        {\n        "uri": {\n            "path": "*",\n            "query": "service_name=canbus"\n        },\n        "every_n": 1\n        },\n        {\n        "uri": {\n            "path": "*",\n            "query": "service_name=gps"\n        },\n        "every_n": 1\n        },\n        {\n        "uri": {\n            "path": "/imu",\n            "query": "service_name=oak/0"\n        },\n        "every_n": 1\n        },\n        {\n        "uri": {\n            "path": "*",\n            "query": "service_name=filter"\n        },\n        "every_n": 1\n        }\n    ]\n}\n'})}),"\n",(0,s.jsxs)(r.admonition,{title:"INFO",type:"info",children:[(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.strong,{children:(0,s.jsx)(r.code,{children:"*"})})," symbol in the ",(0,s.jsx)(r.code,{children:"path"})," field indicates that all available topics of that specific\nsubscription (service) should be recorded."]}),(0,s.jsxs)(r.p,{children:["The ",(0,s.jsx)(r.code,{children:"every_n"})," field indicates the ratio of recording frequency.\nFor example, if the publishing rate of ",(0,s.jsx)(r.code,{children:"oak/0/imu"}),' is 50 ms, an every_n of "2" will yield\nin data being recording every 100 ms (2 * 50 ms).']})]}),"\n",(0,s.jsx)(r.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(r.p,{children:"Users can interact with the Recorder Service using the following commands:"}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recorder/start"}),': Initiates data recording.\nA valid "Recording profile" must be provided as an argument.']}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.code,{children:"recorder/stop"}),": Halts the data recording process."]}),"\n"]}),"\n",(0,s.jsx)(r.h2,{id:"data-storage",children:"Data Storage"}),"\n",(0,s.jsx)(r.p,{children:"All recorded data is saved as binary files on the disk at /mnt/data.\nThe naming convention for these files captures the precise timestamp (to the microsecond)\nat the recording's start, the robot's name, and the file number in the sequence:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"<yyyy>_<mm>_<dd>_<hh>_<mn>_<ss>_<msmsms>_<robot_name>.0000.bin\n"})}),"\n",(0,s.jsx)(r.p,{children:"For example:"}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-php",children:"2024_06_01_12_00_00_134845_element-vegetable.0000.bin\n"})}),"\n",(0,s.jsx)(r.h2,{id:"how-to-use",children:"How to Use"}),"\n",(0,s.jsxs)(r.p,{children:["Data can be recorded through the AppBar, the Camera App, or using the ",(0,s.jsx)(r.code,{children:"EventsClient"})," class\nas in the ",(0,s.jsx)(r.strong,{children:"Events Recorder example"}),"."]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["To record data through the UI on the Brain display, see the\n",(0,s.jsx)(r.a,{href:"/docs/apps/launcher/#status-bar",children:"Launcher Guide - Status Bar"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["To record data through the Camera App on the Brain display, see the\n",(0,s.jsx)(r.a,{href:"/docs/apps/camera_app/",children:"Camera App Guider"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(r.li,{children:["\n",(0,s.jsxs)(r.p,{children:["To record data using the Recorder Service API from your own application, see the\n",(0,s.jsx)(r.a,{href:"/docs/examples/events_recorder/",children:"Events Recorder example"}),"."]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:r}={...(0,i.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},1151:(e,r,n)=>{n.d(r,{Z:()=>t,a:()=>c});var s=n(7294);const i={},o=s.createContext(i);function c(e){const r=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),s.createElement(o.Provider,{value:r},e.children)}}}]);