"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8446],{2275:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>d,contentTitle:()=>o,default:()=>i,frontMatter:()=>l,metadata:()=>c,toc:()=>r});var n=t(7462),s=(t(7294),t(3905));t(1839);const l={sidebar_label:"packet",title:"canbus.packet"},o=void 0,c={unversionedId:"reference/brain/canbus/packet",id:"reference/brain/canbus/packet",title:"canbus.packet",description:"AmigaControlState Objects",source:"@site/docs/reference/brain/canbus/packet.md",sourceDirName:"reference/brain/canbus",slug:"/reference/brain/canbus/packet",permalink:"/docs/reference/brain/canbus/packet",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/brain/canbus/packet.md",tags:[],version:"current",frontMatter:{sidebar_label:"packet",title:"canbus.packet"},sidebar:"api",previous:{title:"canbus_client",permalink:"/docs/reference/brain/canbus/canbus_client"}},d={},r=[{value:"AmigaControlState Objects",id:"amigacontrolstate-objects",level:2},{value:"Packet Objects",id:"packet-objects",level:2},{value:"from_can_data",id:"from_can_data",level:4},{value:"stamp_packet",id:"stamp_packet",level:4},{value:"fresh",id:"fresh",level:4},{value:"age",id:"age",level:4},{value:"make_amiga_rpdo1_proto",id:"make_amiga_rpdo1_proto",level:4},{value:"AmigaRpdo1 Objects",id:"amigarpdo1-objects",level:2},{value:"encode",id:"encode",level:4},{value:"decode",id:"decode",level:4},{value:"AmigaTpdo1 Objects",id:"amigatpdo1-objects",level:2},{value:"encode",id:"encode-1",level:4},{value:"decode",id:"decode-1",level:4},{value:"parse_amiga_tpdo1_proto",id:"parse_amiga_tpdo1_proto",level:4}],p={toc:r};function i(e){let{components:a,...t}=e;return(0,s.kt)("wrapper",(0,n.Z)({},p,t,{components:a,mdxType:"MDXLayout"}),(0,s.kt)("h2",{id:"amigacontrolstate-objects"},"AmigaControlState Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaControlState(IntEnum)\n")),(0,s.kt)("p",null,"State of the Amiga vehicle control unit (VCU)"),(0,s.kt)("h2",{id:"packet-objects"},"Packet Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class Packet()\n")),(0,s.kt)("p",null,"Base class inherited by all CAN message data structures."),(0,s.kt)("h4",{id:"from_can_data"},"from","_","can","_","data"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"@classmethod\ndef from_can_data(cls, data, stamp: float)\n")),(0,s.kt)("p",null,"Unpack CAN data directly into CAN message data structure."),(0,s.kt)("h4",{id:"stamp_packet"},"stamp","_","packet"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def stamp_packet(stamp: float)\n")),(0,s.kt)("p",null,"Time most recent message was received."),(0,s.kt)("h4",{id:"fresh"},"fresh"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def fresh(thresh_s: float = 0.5)\n")),(0,s.kt)("p",null,"Returns False if the most recent message is older than ",(0,s.kt)("inlineCode",{parentName:"p"},"thresh_s")," in seconds."),(0,s.kt)("h4",{id:"age"},"age"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def age()\n")),(0,s.kt)("p",null,"Age of the most recent message."),(0,s.kt)("h4",{id:"make_amiga_rpdo1_proto"},"make","_","amiga","_","rpdo1","_","proto"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def make_amiga_rpdo1_proto(state_req: AmigaControlState, cmd_speed: float,\n                           cmd_ang_rate: float) -> canbus_pb2.RawCanbusMessage\n")),(0,s.kt)("p",null,"Creates a canbus_pb2.RawCanbusMessage, using the AmigaRpdo1 structure and formatting, that can be sent\ndirectly to the canbus service to be formatted and send on the CAN bus."),(0,s.kt)("h2",{id:"amigarpdo1-objects"},"AmigaRpdo1 Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaRpdo1(Packet)\n")),(0,s.kt)("p",null,"State, speed, and angular rate command (request) sent to the Amiga vehicle control unit (VCU)"),(0,s.kt)("h4",{id:"encode"},"encode"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,s.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,s.kt)("h4",{id:"decode"},"decode"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,s.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,s.kt)("h2",{id:"amigatpdo1-objects"},"AmigaTpdo1 Objects"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaTpdo1(Packet)\n")),(0,s.kt)("p",null,"State, speed, and angular rate of the Amiga vehicle control unit (VCU)"),(0,s.kt)("h4",{id:"encode-1"},"encode"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,s.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,s.kt)("h4",{id:"decode-1"},"decode"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,s.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,s.kt)("h4",{id:"parse_amiga_tpdo1_proto"},"parse","_","amiga","_","tpdo1","_","proto"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-python"},"def parse_amiga_tpdo1_proto(\n        message: canbus_pb2.RawCanbusMessage) -> Optional[AmigaTpdo1]\n")),(0,s.kt)("p",null,"Parses a canbus_pb2.RawCanbusMessage, IFF the message came from the dashboard and contains AmigaTpdo1\nstructure, formatting, and cobid."),(0,s.kt)("p",null,"Otherwise returns None."))}i.isMDXComponent=!0}}]);