"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[1501],{2794:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var i=t(4848),s=t(8453);const o={id:"getting-started-kivy",title:"01 - Installing Templates"},a="Developing Custom Applications",r={id:"tutorials/introduction/getting-started-kivy",title:"01 - Installing Templates",description:"In this tutorial we will show you how to develop a custom Kivy application for the Amiga Brain.",source:"@site/docs/tutorials/introduction/01_getting_started.mdx",sourceDirName:"tutorials/introduction",slug:"/tutorials/introduction/getting-started-kivy",permalink:"/docs/tutorials/introduction/getting-started-kivy",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/tutorials/introduction/01_getting_started.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"getting-started-kivy",title:"01 - Installing Templates"},sidebar:"examples",previous:{title:"00 - Introduction",permalink:"/docs/tutorials/introduction/tutorial-introduction"},next:{title:"02 - Template Overview",permalink:"/docs/tutorials/introduction/template-overview"}},l={},c=[{value:"Create a new app repository",id:"create-a-new-app-repository",level:2},{value:"Cloning Repository onto Brain",id:"cloning-repository-onto-brain",level:2},{value:"Project structure",id:"project-structure",level:3},{value:"Customizing manifest.json file",id:"customizing-manifestjson-file",level:2},{value:"Add app to brain screen",id:"add-app-to-brain-screen",level:3},{value:"Run from the command line",id:"run-from-the-command-line",level:3}];function d(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"developing-custom-applications",children:"Developing Custom Applications"})}),"\n",(0,i.jsxs)(n.p,{children:["In this tutorial we will show you how to develop a custom ",(0,i.jsx)(n.a,{href:"https://kivy.org/",children:(0,i.jsx)(n.strong,{children:"Kivy"})})," application for the Amiga Brain."]}),"\n",(0,i.jsx)(n.admonition,{title:"Prerequisites",type:"warning",children:(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/ssh",children:(0,i.jsx)(n.strong,{children:"SSH Access"})}),": ensure that you have ssh access to the brain and a user account"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/docs/support/github-101#set-up-an-ssh-key",children:(0,i.jsx)(n.strong,{children:"GitHub-101"})}),": ensure that you have an ssh key for your user account\non your brain."]}),"\n"]})}),"\n",(0,i.jsx)(n.h2,{id:"create-a-new-app-repository",children:"Create a new app repository"}),"\n",(0,i.jsxs)(n.p,{children:["To create your own custom application navigate to the ",(0,i.jsx)(n.a,{href:"https://github.com/farm-ng/amiga-app-template-kivy",children:(0,i.jsx)(n.strong,{children:(0,i.jsx)(n.code,{children:"amiga-app-template-kivy"})})})," repository on GitHub."]}),"\n",(0,i.jsx)(n.admonition,{type:"tip",children:(0,i.jsxs)(n.p,{children:["You need to be signed into your GitHub account to see the option:  ",(0,i.jsx)(n.code,{children:"Use this template"}),"."]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://user-images.githubusercontent.com/5157099/205272492-356c1540-948e-43dc-8f60-8992caa8d511.gif",alt:"Create a new templated repository"})}),"\n",(0,i.jsx)(n.p,{children:"Written instructions (same as video above):"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:["Click on green ",(0,i.jsx)(n.em,{children:"Use this template"})," button (top right) to create a new repository based on this repo"]}),"\n",(0,i.jsxs)(n.li,{children:["Fill out:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Owner: (your_username)"}),"\n",(0,i.jsxs)(n.li,{children:["Repository Name: whatever-you-want","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Should be between between 4-17 characters, and"}),"\n",(0,i.jsx)(n.li,{children:"Use underscores (_) or dashes (-) for separating words (no spaces!)\n-Select Public box\n-Click [Create repository from template]\nDone!"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Now that you are done creating your repository, let the development begin!! :))"}),"\n",(0,i.jsx)(n.h2,{id:"cloning-repository-onto-brain",children:"Cloning Repository onto Brain"}),"\n",(0,i.jsxs)(n.p,{children:["Once you have established ",(0,i.jsx)(n.a,{href:"/docs/ssh",children:(0,i.jsx)(n.strong,{children:"SSH connection"})})," with your robot and setup your ssh key, clone the repository in your root directory:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cd ~\ngit clone https://github.com/YOUR-USERNAME/YOUR_REPOSITORY_NAME.git\n"})}),"\n",(0,i.jsx)(n.h3,{id:"project-structure",children:"Project structure"}),"\n",(0,i.jsxs)(n.p,{children:["We recommend using ",(0,i.jsx)(n.a,{href:"https://code.visualstudio.com/docs/introvideos/basics",children:(0,i.jsx)(n.strong,{children:"VS-code"})})," as the IDE for developing."]}),"\n",(0,i.jsx)(n.p,{children:'Once you have established SSH connection with the robot, on the VS-code home page, select "Open folder" and navigate to\nthe repository of your custom application.'}),"\n",(0,i.jsx)(n.p,{children:"On the left side of the screen, you should see:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"YOUR_REPOSITORY_NAME/  # Root level of the project.\n\u251c\u2500\u2500 libs/ # Contains private libraries.\n|   \u2514\u2500\u2500 project_name/\n|       \u251c\u2500\u2500 ops.py  # e.g a operators submodule\n|       \u2514\u2500\u2500 project_name_subpackage/\n|           \u2514\u2500\u2500 utils.py  # e.g a utilities submodule\n\u251c\u2500\u2500 src/ # Contains all code needed to run the main gui application.\n|   \u251c\u2500\u2500 assets/  # Contains files needed to run the application\n|   |   \u2514\u2500\u2500 app_logo.png  # static images or images for buttons.\n|   \u251c\u2500\u2500 res/  # Contains the layout files and UI strings.\n|   |   \u2514\u2500\u2500 main.kv  # main ui layout in Kivy languague\n|   \u2514\u2500\u2500 main.py  # Is the main entry point for the gui application.\n\u251c\u2500\u2500 test/  # Contains code for test of the private libs.\n|   \u2514\u2500\u2500 test_dummy.py  # sets of unit test.\n\u251c\u2500\u2500 install.sh\n|    # The script to install the app on the brain.\n\u251c\u2500\u2500 uninstall.sh\n|    # The script to uninstall the app from the brain.\n\u251c\u2500\u2500 manifest.json\n|    # The file containing the metadata of the app to register it on the brain.\n\u251c\u2500\u2500 entry.sh\n|    # The script to setup the project, create a virtual env. and install dependencies.\n\u2514\u2500\u2500 setup.cfg\n    # The file containing the metadata of the package, including the name, versioning, etc. Learn more here: https://setuptools.pypa.io/en/latest/userguide/declarative_config.html\n\n"})}),"\n",(0,i.jsx)(n.h2,{id:"customizing-manifestjson-file",children:"Customizing manifest.json file"}),"\n",(0,i.jsx)(n.p,{children:"The manifest.json file is the bridge between your custom app and the brain."}),"\n",(0,i.jsx)(n.p,{children:'There are three edits to be made to the file all in CAPS, in "name", "exec_cmd", "display_name"'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "services": {\n    "TEMPLATE_NAME": {\n      "name": "TEMPLATE_NAME",\n      "type": "app",\n      "exec_cmd": "/mnt/managed_home/farm-ng-user-YOUR_USER_HERE/YOUR-REPOSITORY-NAME/entry.sh",\n      "display_name": "APP NAME",\n      "autostart": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.p,{children:'Begin by updating both instances of "TEMPLATE_NAME" to a unique name.\nThis name should not have spaces, we recommend using the same name as the repository name.'}),"\n",(0,i.jsx)(n.p,{children:'Both instances of "TEMPLATE_NAME" should be the same'}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"no spaces"}),"\n",(0,i.jsx)(n.li,{children:'use of "-" or "_"'}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:'Second, "YOUR_USER_HERE" should be updated to the name of the user who initially installed the application.\nThis is the user name from fleet manager.'}),"\n",(0,i.jsx)(n.p,{children:'Finally, "APP NAME" to whatever you\'d like for the brain to display for your custom app.'}),"\n",(0,i.jsx)(n.admonition,{type:"info",children:(0,i.jsx)(n.p,{children:"Example manifest.json"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "services": {\n    "template-app": {\n      "name": "template-app",\n      "type": "app",\n      "exec_cmd": "/mnt/managed_home/farm-ng-user-aoc/our-template-app/entry.sh",\n      "display_name": "Template App",\n      "autostart": false\n    }\n  }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"add-app-to-brain-screen",children:"Add app to brain screen"}),"\n",(0,i.jsxs)(n.p,{children:["To add your custom app to the app page on the barin, run the ",(0,i.jsx)(n.code,{children:"install.sh"})," script."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./install.sh\n"})}),"\n",(0,i.jsx)(n.p,{children:"You should now see your app card on the app screen."}),"\n",(0,i.jsx)(n.p,{children:"If the manifest.json was correctly configured, after a few seconds the application will appear.\nIt takes some time because the virtual environment needs to install all the dependencies."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"https://github.com/farm-ng/amiga-dev-kit/assets/5157099/aac51d8a-ec34-4b85-9e73-f151c008e64c",alt:"Screenshot from 2023-12-01 17-43-59"})}),"\n",(0,i.jsx)(n.h3,{id:"run-from-the-command-line",children:"Run from the command line"}),"\n",(0,i.jsx)(n.p,{children:"Alternatively, while developing, you can run your app from the terminal."}),"\n",(0,i.jsx)(n.p,{children:"To do this, open a terminal and navigate to your cusom app directory"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"./entry.sh  # install and run\n"})}),"\n",(0,i.jsx)(n.p,{children:"Using this method will also allow you to see file outputs in the terminal."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var i=t(6540);const s={},o=i.createContext(s);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);