"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[149],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var u=a.createContext({}),d=function(e){var t=a.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=d(e.components);return a.createElement(u.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=d(n),m=r,g=s["".concat(u,".").concat(m)]||s[m]||p[m]||l;return n?a.createElement(g,i(i({ref:t},c),{},{components:n})):a.createElement(g,i({ref:t},c))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var d=2;d<l;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>u,contentTitle:()=>i,default:()=>p,frontMatter:()=>l,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const l={id:"debug-cable",title:"Debug Cable Overview"},i="farm-ng Debug Cable",o={unversionedId:"debug_cable/debug-cable",id:"debug_cable/debug-cable",title:"Debug Cable Overview",description:"debug_cable",source:"@site/docs/debug_cable/README.md",sourceDirName:"debug_cable",slug:"/debug_cable/",permalink:"/amiga-dev-kit/docs/debug_cable/",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/debug_cable/README.md",tags:[],version:"current",frontMatter:{id:"debug-cable",title:"Debug Cable Overview"},sidebar:"docs",previous:{title:"Dashboard Firmware Updates",permalink:"/amiga-dev-kit/docs/dashboard/dashboard-fw"},next:{title:"Microcontroller Kit Overview",permalink:"/amiga-dev-kit/docs/mcu_kit/"}},u={},d=[{value:"Overview",id:"overview",level:2},{value:"Product specific uses",id:"product-specific-uses",level:3},{value:"Dash",id:"dash",level:4},{value:"Brain",id:"brain",level:4},{value:"Pinout",id:"pinout",level:2}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"farm-ng-debug-cable"},"farm-ng Debug Cable"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/53625197/187536591-042b7f19-c587-45d3-9079-74ec05d77b6e.jpeg",alt:"debug_cable"})),(0,r.kt)("h2",{id:"overview"},"Overview"),(0,r.kt)("p",null,"Cable used to update and debug farm-ng products. It includes rest functionality along with USB and serial communication. "),(0,r.kt)("p",null,"The larger circuit board on the left is the USB / debug breakout, and the smaller board on the right is the serial interface."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/53625197/187536636-64878c45-0d4e-4275-b8b1-7c0b9dd9254f.jpeg",alt:"debug_notes"})),(0,r.kt)("h3",{id:"product-specific-uses"},"Product specific uses"),(0,r.kt)("h4",{id:"dash"},"Dash"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"USB interface is for REPL, fileystem access as well as updating firmware and applications,"),(0,r.kt)("li",{parentName:"ul"},"Serial interface is not used at the moment"),(0,r.kt)("li",{parentName:"ul"},"Reset is connected to the Microcontroller reset and used for hard reset. It also can be double pressed to force bootloader mode. ")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See update process documentation for more information")),(0,r.kt)("h4",{id:"brain"},"Brain"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"USB interface is used for connecting for lashing images"),(0,r.kt)("li",{parentName:"ul"},"Serial interface is used for operating system terminal"),(0,r.kt)("li",{parentName:"ul"},"Reset / Flash button is used for enabling the firmware update mode (press on boot)")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"See flashing and operating system documentation for more information")),(0,r.kt)("h2",{id:"pinout"},"Pinout"),(0,r.kt)("p",null,"Connector M12-8 A code female used to connect to farm-ng products. The debug cable connects the IO to two MicroUSB connectors and a reset button. "),(0,r.kt)("p",null,"Debug wire colors based on common cable with flying leads used on farm-ng built debug kits. "),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"PIN"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Typical Wire Color"),(0,r.kt)("th",{parentName:"tr",align:null},"Notes"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"1"),(0,r.kt)("td",{parentName:"tr",align:null},"RESET"),(0,r.kt)("td",{parentName:"tr",align:null},"White"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"2"),(0,r.kt)("td",{parentName:"tr",align:null},"TTL RX (3.3v)"),(0,r.kt)("td",{parentName:"tr",align:null},"Brown"),(0,r.kt)("td",{parentName:"tr",align:null},"Connect to TX of interface")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"3"),(0,r.kt)("td",{parentName:"tr",align:null},"TTL TX (3.3v)"),(0,r.kt)("td",{parentName:"tr",align:null},"Green"),(0,r.kt)("td",{parentName:"tr",align:null},"Connect to RX of interface")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"4"),(0,r.kt)("td",{parentName:"tr",align:null},"USB D-"),(0,r.kt)("td",{parentName:"tr",align:null},"Yellow"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"5"),(0,r.kt)("td",{parentName:"tr",align:null},"UDB D+"),(0,r.kt)("td",{parentName:"tr",align:null},"Gray"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"6"),(0,r.kt)("td",{parentName:"tr",align:null},"USB VBUS"),(0,r.kt)("td",{parentName:"tr",align:null},"Pink"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"7"),(0,r.kt)("td",{parentName:"tr",align:null},"NC"),(0,r.kt)("td",{parentName:"tr",align:null},"Blue"),(0,r.kt)("td",{parentName:"tr",align:null})),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"8"),(0,r.kt)("td",{parentName:"tr",align:null},"GND"),(0,r.kt)("td",{parentName:"tr",align:null},"Black"),(0,r.kt)("td",{parentName:"tr",align:null})))))}p.isMDXComponent=!0}}]);