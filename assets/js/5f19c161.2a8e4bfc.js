"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4884],{5162:(e,t,n)=>{n.d(t,{Z:()=>i});var a=n(7294),o=n(6010);const r="tabItem_Ymn6";function i(e){let{children:t,hidden:n,className:i}=e;return a.createElement("div",{role:"tabpanel",className:(0,o.Z)(r,i),hidden:n},t)}},4866:(e,t,n)=>{n.d(t,{Z:()=>N});var a=n(7462),o=n(7294),r=n(6010),i=n(2466),l=n(6775),s=n(1980),u=n(7392),d=n(12);function c(e){return function(e){return o.Children.map(e,(e=>{if((0,o.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')}))}(e).map((e=>{let{props:{value:t,label:n,attributes:a,default:o}}=e;return{value:t,label:n,attributes:a,default:o}}))}function p(e){const{values:t,children:n}=e;return(0,o.useMemo)((()=>{const e=null!=t?t:c(n);return function(e){const t=(0,u.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error('Docusaurus error: Duplicate values "'+t.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.')}(e),e}),[t,n])}function m(e){let{value:t,tabValues:n}=e;return n.some((e=>e.value===t))}function h(e){let{queryString:t=!1,groupId:n}=e;const a=(0,l.k6)(),r=function(e){let{queryString:t=!1,groupId:n}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!n)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return null!=n?n:null}({queryString:t,groupId:n});return[(0,s._X)(r),(0,o.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(a.location.search);t.set(r,e),a.replace({...a.location,search:t.toString()})}),[r,a])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:a}=e,r=p(e),[i,l]=(0,o.useState)((()=>function(e){var t;let{defaultValue:n,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:a}))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+n+'" but none of its children has the corresponding value. Available values are: '+a.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");return n}const o=null!=(t=a.find((e=>e.default)))?t:a[0];if(!o)throw new Error("Unexpected error: 0 tabValues");return o.value}({defaultValue:t,tabValues:r}))),[s,u]=h({queryString:n,groupId:a}),[c,g]=function(e){let{groupId:t}=e;const n=function(e){return e?"docusaurus.tab."+e:null}(t),[a,r]=(0,d.Nk)(n);return[a,(0,o.useCallback)((e=>{n&&r.set(e)}),[n,r])]}({groupId:a}),k=(()=>{const e=null!=s?s:c;return m({value:e,tabValues:r})?e:null})();(0,o.useLayoutEffect)((()=>{k&&l(k)}),[k]);return{selectedValue:i,selectValue:(0,o.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error("Can't select invalid tab value="+e);l(e),u(e),g(e)}),[u,g,r]),tabValues:r}}var k=n(2389);const b="tabList__CuJ",y="tabItem_LNqP";function f(e){let{className:t,block:n,selectedValue:l,selectValue:s,tabValues:u}=e;const d=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),p=e=>{const t=e.currentTarget,n=d.indexOf(t),a=u[n].value;a!==l&&(c(t),s(a))},m=e=>{var t;let n=null;switch(e.key){case"Enter":p(e);break;case"ArrowRight":{var a;const t=d.indexOf(e.currentTarget)+1;n=null!=(a=d[t])?a:d[0];break}case"ArrowLeft":{var o;const t=d.indexOf(e.currentTarget)-1;n=null!=(o=d[t])?o:d[d.length-1];break}}null==(t=n)||t.focus()};return o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":n},t)},u.map((e=>{let{value:t,label:n,attributes:i}=e;return o.createElement("li",(0,a.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>d.push(e),onKeyDown:m,onClick:p},i,{className:(0,r.Z)("tabs__item",y,null==i?void 0:i.className,{"tabs__item--active":l===t})}),null!=n?n:t)})))}function w(e){let{lazy:t,children:n,selectedValue:a}=e;if(n=Array.isArray(n)?n:[n],t){const e=n.find((e=>e.props.value===a));return e?(0,o.cloneElement)(e,{className:"margin-top--md"}):null}return o.createElement("div",{className:"margin-top--md"},n.map(((e,t)=>(0,o.cloneElement)(e,{key:t,hidden:e.props.value!==a}))))}function v(e){const t=g(e);return o.createElement("div",{className:(0,r.Z)("tabs-container",b)},o.createElement(f,(0,a.Z)({},e,t)),o.createElement(w,(0,a.Z)({},e,t)))}function N(e){const t=(0,k.Z)();return o.createElement(v,(0,a.Z)({key:String(t)},e))}},3262:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>m,frontMatter:()=>l,metadata:()=>u,toc:()=>c});var a=n(7462),o=(n(7294),n(3905)),r=(n(1839),n(4866)),i=n(5162);const l={id:"contribute-website",title:"Documentation"},s="Getting started",u={unversionedId:"contribute/contribute-website",id:"contribute/contribute-website",title:"Documentation",description:"This page contains instructions for developers who want to contribute to the Amiga Development Kit documentation.",source:"@site/docs/contribute/website.mdx",sourceDirName:"contribute",slug:"/contribute/contribute-website",permalink:"/docs/contribute/contribute-website",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/contribute/website.mdx",tags:[],version:"current",frontMatter:{id:"contribute-website",title:"Documentation"},sidebar:"contribute"},d={},c=[{value:"Installation",id:"installation",level:2},{value:"Local Development",id:"local-development",level:2},{value:"Building the docs",id:"building-the-docs",level:3},{value:"Start yarn",id:"start-yarn",level:3},{value:"Re-enter",id:"re-enter",level:3},{value:"Best practices / tips",id:"best-practices--tips",level:2},{value:"Pre-commit formatting workflow",id:"pre-commit-formatting-workflow",level:3},{value:"Adding to the website",id:"adding-to-the-website",level:2},{value:"Adding pages",id:"adding-pages",level:3},{value:"Adding images",id:"adding-images",level:3},{value:"<strong>Thank you for your help building this community!</strong>",id:"thank-you-for-your-help-building-this-community",level:3},{value:"The documentation website is built using <strong>Docusaurus 2</strong>.",id:"the-documentation-website-is-built-using-docusaurus-2",level:6}],p={toc:c};function m(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting started"),(0,o.kt)("p",null,"This page contains instructions for developers who want to contribute to the Amiga Development Kit documentation."),(0,o.kt)("p",null,"We build our website with ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/"},(0,o.kt)("strong",{parentName:"a"},"Docusaurus 2"))," with Markdown syntax.\nTo get started:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone the ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/farm-ng/amiga-dev-kit"},(0,o.kt)("strong",{parentName:"a"},"Amiga Development Kit repo")))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git clone git@github.com:farm-ng/amiga-dev-kit.git\ncd amiga-dev-kit\ngit submodule update --init\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Create a branch based on ",(0,o.kt)("inlineCode",{parentName:"li"},"main")," and open a pull request with your proposed improvements.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reach out to us on the ",(0,o.kt)("a",{parentName:"li",href:"https://discourse.farm-ng.com/c/support/5"},(0,o.kt)("strong",{parentName:"a"},"farm-ng Discourse #support"))," if you need help or support on this.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout main\ngit pull\ngit checkout -b <your-new-branch>\n# make your changes; then\ngit push -u origin <your-new-branch>\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"Follow the instructions below for building the docs locally so you can see your changes in real time!")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"If you aren't familiar with Markdown syntax, check out one of the many getting started guides available free online.\nSuch as ",(0,o.kt)("a",{parentName:"p",href:"https://www.markdownguide.org/"},(0,o.kt)("strong",{parentName:"a"},"Markdown Guide")),".")),(0,o.kt)("h1",{id:"building-these-docs"},"Building these Docs"),(0,o.kt)("p",null,"In order to work locally on your machine and contribute to these docs, you will need to install the build infrastructure."),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You can edit the documentation directly on github and do not need to fuss with things here!\nFollow instructions below for adding images to the website, it's the same for text.")),(0,o.kt)("h2",{id:"installation"},"Installation"),(0,o.kt)("p",null,"Docusaurus allows you to build the docs locally and inspect how the website will appear, before actually deploying."),(0,o.kt)("p",null,"In order to use docusaurus locally you'll need to install a couple libraries:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Node.js version 16.14 or above (which can be checked by running ",(0,o.kt)("inlineCode",{parentName:"li"},"node -v"),")"),(0,o.kt)("li",{parentName:"ul"},"Yarn >= 1.22.19")),(0,o.kt)("p",null,"We recommend doing so in a virtual environment to avoid conflicts with other packages / versions installed on your system.\nThough this is not a requirement and you are welcome to decide how / where to install."),(0,o.kt)("p",null,"Install ",(0,o.kt)("inlineCode",{parentName:"p"},"pip3")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"virtualenv")," (system level):"),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"linux",label:"Linux",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt-get install python3-pip\nsudo pip3 install virtualenv\n"))),(0,o.kt)(i.Z,{value:"macos",label:"MacOs",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install python3\nsudo pip3 install virtualenv\n")))),(0,o.kt)("p",null,"Start a virtual environment:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# assuming you're already in the amiga-dev-kit/ directory\n# or wherever you want your `venv` to exist\npython3 -m venv venv\nsource venv/bin/activate\n")),(0,o.kt)(r.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"linux",label:"Linux",default:!0,mdxType:"TabItem"},"Install NVM / nodejs",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt update\ncurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash\n# source ~/.bashrc # if not using a venv\n\n# Verify install\nnvm --version\n\n# Install node\nnvm install node\n")),(0,o.kt)("p",null,"Install yarn"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"sudo apt install npm\nsudo npm install -g yarn\n\n# Check version\nyarn --version\n"))),(0,o.kt)(i.Z,{value:"macos",label:"MacOs",mdxType:"TabItem"},"Install npm",(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install npm\n")),(0,o.kt)("p",null,"Install yarn"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"brew install yarn\n# yes, use a package manager to install a package manager... ;)\n")))),(0,o.kt)("h2",{id:"local-development"},"Local Development"),(0,o.kt)("p",null,"After successful installation and working in the amiga-dev-kit github repo, you'll be able to pull down the latest, create a branch, and send pull requests just as you would editing any repo."),(0,o.kt)("p",null,"After making your edits, you will build the docs locally in order to preview them before committing and pushing.  Following the steps below,\nyou would be able to start a local development server that opens a browser window and gives you a live preview of the page you are editing!  It will automatically update every time you save."),(0,o.kt)("h3",{id:"building-the-docs"},"Building the docs"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd website/  # /farm-ng/amiga-dev-kit/website\npip install -r requirements.txt\nyarn\n./run_pydoc-markdown.sh\nyarn build\n")),(0,o.kt)("p",null,"This command generates static content into the ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," directory and can be served using any static contents hosting service."),(0,o.kt)("h3",{id:"start-yarn"},"Start yarn"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"This command starts a local development server and opens up a browser window.\nMost changes are reflected live without having to restart the server.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"yarn start\n")),(0,o.kt)("p",null,"Later, you can exit your virtualenv with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"deactivate\n")),(0,o.kt)("h3",{id:"re-enter"},"Re-enter"),(0,o.kt)("p",null,"When you come back you can re-enter from the root where the venv was created (e.g., ",(0,o.kt)("inlineCode",{parentName:"p"},"amiga-dev-kit/"),") with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"# assuming you're already in the amiga-dev-kit/ directory\n# or wherever your `venv` exists\nsource venv/bin/activate\n")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You may find issues with the node, npm, or yarn version.\nIf so, re-install these packages in your venv with:"),(0,o.kt)("pre",{parentName:"admonition"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"nvm install node\n# sudo apt install npm\nnpm install -g yarn\n"))),(0,o.kt)("p",null,"Then rebuild the yarn server;"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"cd website\nyarn\nyarn start\n")),(0,o.kt)("h2",{id:"best-practices--tips"},"Best practices / tips"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Add command line instructions where possible, rather than just posting link to an external website",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Links can be broken without us knowing!"))),(0,o.kt)("li",{parentName:"ul"},".mdx allows for cool extensions included in the file",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Like the tab for different installation instructions(e.g. Mac, Linux, Windows)"),(0,o.kt)("li",{parentName:"ul"},"Use .mdx plugins to write JSX within your Markdown files and render them as React components.",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://docusaurus.io/docs/markdown-features/react"},(0,o.kt)("strong",{parentName:"a"},"See link here"))))))),(0,o.kt)("li",{parentName:"ul"},"Run ",(0,o.kt)("a",{parentName:"li",href:"#pre-commit-formatting-workflow"},(0,o.kt)("strong",{parentName:"a"},(0,o.kt)("inlineCode",{parentName:"strong"},"pre-commit")))," checks before committing / pushing",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"pre-commit run --all-files")))),(0,o.kt)("li",{parentName:"ul"},"Test your links!"),(0,o.kt)("li",{parentName:"ul"},"Use the following VS Code extensions:",(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Code Spell Checker")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Trailing Spaces")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Markdown All in One")))),(0,o.kt)("li",{parentName:"ul"},"Gussy up your Markdown")),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can make your work more legible using ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/markdown-features/admonitions"},(0,o.kt)("strong",{parentName:"a"},"admonitions"))," like this TIP box!\nMore markdown features can be found in the docusaurus documentation ",(0,o.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs/markdown-features"},(0,o.kt)("strong",{parentName:"a"},"here")),".")),(0,o.kt)("h3",{id:"pre-commit-formatting-workflow"},"Pre-commit formatting workflow"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"You may need to install pre-commit, instructions can be found ",(0,o.kt)("a",{parentName:"p",href:"https://pre-commit.com/"},(0,o.kt)("strong",{parentName:"a"},"here")))),(0,o.kt)("p",null,"A typical workflow for committing your code changes may look like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'git add -p # Add the changes I want\npre-commit run --all-files\ngit add -p # Add the formatting changes the check just fixed\npre-commit run --all-files # double check for any formatting issues not resolved automatically (e.g., spellcheck)\ngit commit -m "foo bar baz"\ngit push\n')),(0,o.kt)("h2",{id:"adding-to-the-website"},"Adding to the website"),(0,o.kt)("h3",{id:"adding-pages"},"Adding pages"),(0,o.kt)("p",null,"The pages are defined in a file called ",(0,o.kt)("inlineCode",{parentName:"p"},"website/sidebars.js"),".\nDepending on what you are adding you can choose to add it into the docs section or examples/ wherever would be most appropriate.\nThe pattern and structure in ",(0,o.kt)("inlineCode",{parentName:"p"},"sidebars.js")," should be clear."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"For example :")),(0,o.kt)("p",null,"If you want to add another section in between ",(0,o.kt)("inlineCode",{parentName:"p"},"Dashboard")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"Debug Cable")," it will be something like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'"docs": {\n  "Introduction": [\n    "getting-started",\n  ],\n  "Dashboard": [\n    "dashboard/dashboard",\n    "dashboard/dashboard-fw",\n    "dashboard/control-states",\n  ],\n  "Debug Cable": [\n    "debug_cable/debug-cable",\n  ],\n')),(0,o.kt)("p",null,"You can change it to:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'"docs": {\n  "Introduction": [\n    "getting-started",\n  ],\n  "Dashboard": [\n    "dashboard/dashboard",\n    "dashboard/dashboard-fw",\n    "dashboard/control-states",\n  ],\n  "My New Section": [\n    "my_new_section/my-new-page",\n  ],\n  "Debug Cable": [\n    "debug_cable/debug-cable",\n  ],\n')),(0,o.kt)("p",null,"Add a new directory ",(0,o.kt)("inlineCode",{parentName:"p"},"website/docs/my_new_section/"),".\nThen you can add a markdown (",(0,o.kt)("inlineCode",{parentName:"p"},"*.md"),") file in that directory called ",(0,o.kt)("inlineCode",{parentName:"p"},"my-new-page.md"),".\nThe top of ",(0,o.kt)("inlineCode",{parentName:"p"},"my-new-page.md")," should be:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"---\nid: my-new-page\ntitle: My New Page\n---\n\n# Header of my new page\n\n## Subheader 1\n")),(0,o.kt)("p",null,"Now with your locally build docs you should see a new tab called ",(0,o.kt)("strong",{parentName:"p"},'"My New Section"')," with a page called ",(0,o.kt)("strong",{parentName:"p"},'"My New Page"'),".\nIf you open that page you should see it has the header of ",(0,o.kt)("strong",{parentName:"p"},'"Header of my new page"'),"."),(0,o.kt)("h3",{id:"adding-images"},"Adding images"),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"If you are already working in an active branch, this process works for branched versions of markdown files.\nIf you are not, you will be prompted to create a new branch with your edits (to open a pull request) or commit the edits directly.")),(0,o.kt)("p",null,"We want to keep this repository as lightweight as possible.\nFor this reason, please do not add any images to the filesystem of this repository.\nIf you'd like to add an image, you should edit the README\nonline through Github by:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Press the edit button in the top right corner of the markdown file"),(0,o.kt)("li",{parentName:"ol"},"Drag & drop an image into the markdown file you are editing."),(0,o.kt)("li",{parentName:"ol"},"A link to the image should be automatically generated and formatted in the markdown file.")),(0,o.kt)("p",null,"The generated link should look something like: ",(0,o.kt)("a",{parentName:"p",href:"https://user-images.githubusercontent.com/11846963/185976402-ff8c4c77-5a08-42b0-865f-d2840fc0b960.jpg"},"https://user-images.githubusercontent.com/11846963/185976402-ff8c4c77-5a08-42b0-865f-d2840fc0b960.jpg")),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"If you are also editing the file locally, you should add the image to the branch you are actively editing.\nRecommend committing your changes before adding the image to avoid merge conflicts, and using ",(0,o.kt)("inlineCode",{parentName:"p"},"git pull")," to pull in the changes to your local branch before continuing to edit.")),(0,o.kt)("admonition",{title:"farm-ng employees",type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"Please back up the images you add to the website in the ",(0,o.kt)("inlineCode",{parentName:"p"},"Website/Assets/")," directory of our shared drive (linked from Media Bin).")),(0,o.kt)("h3",{id:"thank-you-for-your-help-building-this-community"},(0,o.kt)("strong",{parentName:"h3"},"Thank you for your help building this community!")),(0,o.kt)("h6",{id:"the-documentation-website-is-built-using-docusaurus-2"},"The documentation website is built using ",(0,o.kt)("a",{parentName:"h6",href:"https://docusaurus.io/"},(0,o.kt)("strong",{parentName:"a"},"Docusaurus 2")),"."))}m.isMDXComponent=!0}}]);