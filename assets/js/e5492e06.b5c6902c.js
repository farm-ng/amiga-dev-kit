"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6739],{8712:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>i});var l=r(7462),n=(r(7294),r(3905));r(1839);const o={sidebar_label:"controller_client",title:"controller.controller_client"},c=void 0,s={unversionedId:"reference/brain/controller/controller_client",id:"reference/brain/controller/controller_client",title:"controller.controller_client",description:"ControllerClientConfig Objects",source:"@site/docs/reference/brain/controller/controller_client.md",sourceDirName:"reference/brain/controller",slug:"/reference/brain/controller/controller_client",permalink:"/docs/reference/brain/controller/controller_client",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/brain/controller/controller_client.md",tags:[],version:"current",frontMatter:{sidebar_label:"controller_client",title:"controller.controller_client"}},a={},i=[{value:"ControllerClientConfig Objects",id:"controllerclientconfig-objects",level:2},{value:"port",id:"port",level:4},{value:"address",id:"address",level:4},{value:"ControllerServiceState Objects",id:"controllerservicestate-objects",level:2},{value:"ControllerClient Objects",id:"controllerclient-objects",level:2},{value:"server_address",id:"server_address",level:4}],d={toc:i};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,l.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"controllerclientconfig-objects"},"ControllerClientConfig Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass ControllerClientConfig()\n")),(0,n.kt)("p",null,"Controller client configuration."),(0,n.kt)("p",null,(0,n.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"port")," ",(0,n.kt)("em",{parentName:"li"},"int")," - the port to connect to the server."),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"address")," ",(0,n.kt)("em",{parentName:"li"},"str")," - the address to connect to the server.")),(0,n.kt)("h4",{id:"port"},"port"),(0,n.kt)("p",null,"the port of the server address"),(0,n.kt)("h4",{id:"address"},"address"),(0,n.kt)("p",null,"the address name of the server"),(0,n.kt)("h2",{id:"controllerservicestate-objects"},"ControllerServiceState Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class ControllerServiceState()\n")),(0,n.kt)("p",null,"Controller service state."),(0,n.kt)("h2",{id:"controllerclient-objects"},"ControllerClient Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class ControllerClient()\n")),(0,n.kt)("h4",{id:"server_address"},"server","_","address"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef server_address() -> str\n")),(0,n.kt)("p",null,"Returns the composed address and port."))}p.isMDXComponent=!0}}]);