"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[2341],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function c(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){c(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,c=function(e,t){if(null==e)return{};var r,n,c={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(c[r]=e[r]);return c}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(c[r]=e[r])}return c}var l=n.createContext({}),p=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,c=e.mdxType,i=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=p(r),f=c,b=d["".concat(l,".").concat(f)]||d[f]||s[f]||i;return r?n.createElement(b,o(o({ref:t},u),{},{components:r})):n.createElement(b,o({ref:t},u))}));function f(e,t){var r=arguments,c=t&&t.mdxType;if("string"==typeof e||c){var i=r.length,o=new Array(i);o[0]=d;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a.mdxType="string"==typeof e?e:c,o[1]=a;for(var p=2;p<i;p++)o[p]=r[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1862:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var n=r(7462),c=(r(7294),r(3905));const i={sidebar_label:"cobid",title:"utils.cobid"},o=void 0,a={unversionedId:"reference/circuitpy/utils/cobid",id:"reference/circuitpy/utils/cobid",title:"utils.cobid",description:"CanOpenObject Objects",source:"@site/docs/reference/circuitpy/utils/cobid.md",sourceDirName:"reference/circuitpy/utils",slug:"/reference/circuitpy/utils/cobid",permalink:"/amiga-dev-kit/docs/reference/circuitpy/utils/cobid",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/circuitpy/utils/cobid.md",tags:[],version:"current",frontMatter:{sidebar_label:"cobid",title:"utils.cobid"},sidebar:"api",previous:{title:"can",permalink:"/amiga-dev-kit/docs/reference/circuitpy/utils/can"},next:{title:"general",permalink:"/amiga-dev-kit/docs/reference/circuitpy/utils/general"}},l={},p=[{value:"CanOpenObject Objects",id:"canopenobject-objects",level:2}],u={toc:p};function s(e){let{components:t,...r}=e;return(0,c.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,c.kt)("h2",{id:"canopenobject-objects"},"CanOpenObject Objects"),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-python"},"class CanOpenObject()\n")),(0,c.kt)("p",null,"CANopen function codes."),(0,c.kt)("p",null,"Add to node_id (for most functions) for CAN id"))}s.isMDXComponent=!0}}]);