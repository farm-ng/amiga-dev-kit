"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8446],{2275:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>p,contentTitle:()=>s,default:()=>i,frontMatter:()=>o,metadata:()=>r,toc:()=>d});var n=a(7462),l=(a(7294),a(3905));a(1839);const o={sidebar_label:"packet",title:"canbus.packet"},s=void 0,r={unversionedId:"reference/brain/canbus/packet",id:"reference/brain/canbus/packet",title:"canbus.packet",description:"AmigaControlState Objects",source:"@site/docs/reference/brain/canbus/packet.md",sourceDirName:"reference/brain/canbus",slug:"/reference/brain/canbus/packet",permalink:"/docs/reference/brain/canbus/packet",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/brain/canbus/packet.md",tags:[],version:"current",frontMatter:{sidebar_label:"packet",title:"canbus.packet"},sidebar:"api",previous:{title:"canbus_client",permalink:"/docs/reference/brain/canbus/canbus_client"}},p={},d=[{value:"AmigaControlState Objects",id:"amigacontrolstate-objects",level:2},{value:"Packet Objects",id:"packet-objects",level:2},{value:"from_can_data",id:"from_can_data",level:4},{value:"stamp_packet",id:"stamp_packet",level:4},{value:"fresh",id:"fresh",level:4},{value:"age",id:"age",level:4},{value:"make_amiga_rpdo1_proto",id:"make_amiga_rpdo1_proto",level:4},{value:"AmigaRpdo1 Objects",id:"amigarpdo1-objects",level:2},{value:"encode",id:"encode",level:4},{value:"decode",id:"decode",level:4},{value:"AmigaTpdo1 Objects",id:"amigatpdo1-objects",level:2},{value:"encode",id:"encode-1",level:4},{value:"decode",id:"decode-1",level:4},{value:"parse_amiga_tpdo1_proto",id:"parse_amiga_tpdo1_proto",level:4},{value:"MotorControllerStatus Objects",id:"motorcontrollerstatus-objects",level:2},{value:"PRE_OPERATIONAL",id:"pre_operational",level:4},{value:"IDLE",id:"idle",level:4},{value:"POST_OPERATIONAL",id:"post_operational",level:4},{value:"RUN",id:"run",level:4},{value:"FAULT",id:"fault",level:4},{value:"MotorState Objects",id:"motorstate-objects",level:2},{value:"to_proto",id:"to_proto",level:4}],c={toc:d};function i(e){let{components:t,...a}=e;return(0,l.kt)("wrapper",(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"amigacontrolstate-objects"},"AmigaControlState Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaControlState(IntEnum)\n")),(0,l.kt)("p",null,"State of the Amiga vehicle control unit (VCU)"),(0,l.kt)("h2",{id:"packet-objects"},"Packet Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Packet()\n")),(0,l.kt)("p",null,"Base class inherited by all CAN message data structures."),(0,l.kt)("h4",{id:"from_can_data"},"from","_","can","_","data"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@classmethod\ndef from_can_data(cls, data, stamp: float)\n")),(0,l.kt)("p",null,"Unpack CAN data directly into CAN message data structure."),(0,l.kt)("h4",{id:"stamp_packet"},"stamp","_","packet"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def stamp_packet(stamp: float)\n")),(0,l.kt)("p",null,"Time most recent message was received."),(0,l.kt)("h4",{id:"fresh"},"fresh"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def fresh(thresh_s: float = 0.5)\n")),(0,l.kt)("p",null,"Returns False if the most recent message is older than ",(0,l.kt)("inlineCode",{parentName:"p"},"thresh_s")," in seconds."),(0,l.kt)("h4",{id:"age"},"age"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def age()\n")),(0,l.kt)("p",null,"Age of the most recent message."),(0,l.kt)("h4",{id:"make_amiga_rpdo1_proto"},"make","_","amiga","_","rpdo1","_","proto"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def make_amiga_rpdo1_proto(\n        state_req: AmigaControlState,\n        cmd_speed: float,\n        cmd_ang_rate: float,\n        pto_bits: int = 0x0,\n        hbridge_bits: int = 0x0) -> canbus_pb2.RawCanbusMessage\n")),(0,l.kt)("p",null,"Creates a canbus_pb2.RawCanbusMessage."),(0,l.kt)("p",null,"Uses the AmigaRpdo1 structure and formatting, that can be sent\ndirectly to the canbus service to be formatted and send on the CAN bus."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"state_req")," - State of the Amiga vehicle control unit (VCU)."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd_speed")," - Command speed in meters per second."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"cmd_ang_rate")," - Command angular rate in radians per second.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  An instance of a canbus_pb2.RawCanbusMessage."),(0,l.kt)("h2",{id:"amigarpdo1-objects"},"AmigaRpdo1 Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaRpdo1(Packet)\n")),(0,l.kt)("p",null,"State, speed, and angular rate command (request) sent to the Amiga vehicle control unit (VCU)."),(0,l.kt)("p",null,"New in fw v0.1.9 / farm-ng-amiga v0.0.7: Add pto ","&"," hbridge control. Message data is now 8 bytes (was 5)."),(0,l.kt)("h4",{id:"encode"},"encode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,l.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,l.kt)("h4",{id:"decode"},"decode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,l.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,l.kt)("h2",{id:"amigatpdo1-objects"},"AmigaTpdo1 Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaTpdo1(Packet)\n")),(0,l.kt)("p",null,"State, speed, and angular rate of the Amiga vehicle control unit (VCU)."),(0,l.kt)("p",null,"New in fw v0.1.9 / farm-ng-amiga v0.0.7: Add pto ","&"," hbridge control. Message data is now 8 bytes (was 5)."),(0,l.kt)("h4",{id:"encode-1"},"encode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,l.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,l.kt)("h4",{id:"decode-1"},"decode"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,l.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,l.kt)("h4",{id:"parse_amiga_tpdo1_proto"},"parse","_","amiga","_","tpdo1","_","proto"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def parse_amiga_tpdo1_proto(\n        message: canbus_pb2.RawCanbusMessage) -> AmigaTpdo1 | None\n")),(0,l.kt)("p",null,"Parses a canbus_pb2.RawCanbusMessage."),(0,l.kt)("p",null,"IFF the message came from the dashboard and contains AmigaTpdo1 structure,\nformatting, and cobid."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"message")," - The raw canbus message to parse.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("p",null,"  The parsed AmigaTpdo1 message, or None if the message is not a valid AmigaTpdo1 message."),(0,l.kt)("h2",{id:"motorcontrollerstatus-objects"},"MotorControllerStatus Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class MotorControllerStatus(IntEnum)\n")),(0,l.kt)("p",null,"Values representing the status of the motor controller."),(0,l.kt)("h4",{id:"pre_operational"},"PRE","_","OPERATIONAL"),(0,l.kt)("p",null,"the motor is not ready to run"),(0,l.kt)("h4",{id:"idle"},"IDLE"),(0,l.kt)("p",null,"the motor is waiting to start"),(0,l.kt)("h4",{id:"post_operational"},"POST","_","OPERATIONAL"),(0,l.kt)("p",null,"the motor already started"),(0,l.kt)("h4",{id:"run"},"RUN"),(0,l.kt)("p",null,"the motor is running"),(0,l.kt)("h4",{id:"fault"},"FAULT"),(0,l.kt)("p",null,"the motor controller is in fault mode"),(0,l.kt)("h2",{id:"motorstate-objects"},"MotorState Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class MotorState()\n")),(0,l.kt)("p",null,"Values representing the state of the motor."),(0,l.kt)("p",null,"Amalgamates values from multiple CAN packets."),(0,l.kt)("h4",{id:"to_proto"},"to","_","proto"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def to_proto() -> canbus_pb2.MotorState\n")),(0,l.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."))}i.isMDXComponent=!0}}]);