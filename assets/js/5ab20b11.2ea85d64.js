"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[4297],{5934:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var s=t(4848),r=t(8453);const a={id:"track-planner",title:"Track Planner"},i=void 0,o={id:"examples/track_planner/track-planner",title:"Track Planner",description:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:",source:"@site/docs/examples/track_planner/README.md",sourceDirName:"examples/track_planner",slug:"/examples/track_planner/",permalink:"/docs/examples/track_planner/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/examples/track_planner/README.md",tags:[],version:"current",frontMatter:{id:"track-planner",title:"Track Planner"},sidebar:"examples",previous:{title:"Follow a Track",permalink:"/docs/examples/track_follower/"},next:{title:"Drive a Square",permalink:"/docs/examples/square_track/"}},c={},l=[{value:"1. Install the farm-ng Brain ADK package",id:"1-install-the-farm-ng-brain-adk-package",level:2},{value:"2. Install the example&#39;s dependencies",id:"2-install-the-examples-dependencies",level:2},{value:"Setup",id:"setup",level:3},{value:"Install",id:"install",level:3},{value:"3. Execute the Python script",id:"3-execute-the-python-script",level:2},{value:"4. Customize the run",id:"4-customize-the-run",level:2},{value:"Methods",id:"methods",level:3},{value:"5. [Optional] Use your custom track on Autoplot",id:"5-optional-use-your-custom-track-on-autoplot",level:2}];function d(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{title:"Basic Knowledge Requirements",type:"info",children:[(0,s.jsx)(n.p,{children:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Python Programming"}),": It's important to have a good grasp of Python, especially with concepts\nlike ",(0,s.jsx)(n.code,{children:"functions"}),", ",(0,s.jsx)(n.code,{children:"loops"}),", and ",(0,s.jsx)(n.code,{children:"classes"}),", since the example utilizes these fundamentals."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Asynchronous Programming with asyncio"}),": Familiarity with Python's asyncio for writing concurrent\ncode using the ",(0,s.jsx)(n.code,{children:"async/await"})," syntax."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/docs/concepts/filter_service/",children:"farm-ng Filter Service Overview"})}),":\nThis overview provides a base understanding of the gRPC service the client you create will connect to."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/concepts/transforms_and_poses/",children:(0,s.jsx)(n.strong,{children:"farm-ng Transforms & Poses Overview"})}),":\nThis overview provides insight into coordinate frames, transforms,\nand poses as they pertain to autonomous systems and autonomous navigation."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"/docs/concepts/tracks_and_waypoints/",children:(0,s.jsx)(n.strong,{children:"farm-ng Tracks & Waypoints Overview"})}),":\nThis overview provides insight into compiling poses as waypoints into a Track\nthat can be followed by the Amiga."]}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/py/examples/track_planner/main.py",children:(0,s.jsx)(n.strong,{children:"Track Planner Example"})}),"\noperates as a standalone Python script,\nin which a ",(0,s.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/protos/farm_ng/track/track.proto",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"Track"})})}),"\nproto message is generated using the ",(0,s.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/py/examples/track_planner/track_planner.py",children:"TrackPlanner"}),"\nclass. We use the ",(0,s.jsx)(n.a,{href:"https://matplotlib.org/",children:(0,s.jsx)(n.code,{children:"matplotlib"})})," library to visualize\nthe Track we created."]}),"\n",(0,s.jsx)(n.p,{children:"We used this example to generate a virtual strawberry field at the 2024 World Ag. Expo!"}),"\n",(0,s.jsx)(n.p,{children:"To successfully run this example, you must use your local PC, as the example won't\nwork if executed directly from a brain (because of the popup window)."}),"\n",(0,s.jsxs)(n.h2,{id:"1-install-the-farm-ng-brain-adk-package",children:["1. Install the ",(0,s.jsx)(n.a,{href:"/docs/brain/brain-install",children:"farm-ng Brain ADK package"})]}),"\n",(0,s.jsx)(n.h2,{id:"2-install-the-examples-dependencies",children:"2. Install the example's dependencies"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"It is recommended to also install these dependencies and run the\nexample in the brain ADK virtual environment."})}),"\n",(0,s.jsx)(n.h3,{id:"setup",children:"Setup"}),"\n",(0,s.jsx)(n.admonition,{title:"Recommended",type:"important",children:(0,s.jsx)(n.p,{children:"Create a virtual environment"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python3 -m venv venv\nsource venv/bin/activate\n"})}),"\n",(0,s.jsx)(n.h3,{id:"install",children:"Install"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd py/examples/track_plotter\npip install -r requirements.txt\nsudo apt-get install python3-tk\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-execute-the-python-script",children:"3. Execute the Python script"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["Since this example must be run from your local PC, you will need update the ",(0,s.jsx)(n.code,{children:"service_config.json"}),"\nby modifying the ",(0,s.jsx)(n.code,{children:"host"})," field with your Amiga brain name."]}),(0,s.jsxs)(n.p,{children:["Please check out ",(0,s.jsx)(n.a,{href:"/docs/concepts/system_overview/#running-examples-on-your-local-machine",children:"Amiga Development 101"}),"\nfor more details."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python main.py --service-config service_config.json\n"})}),"\n",(0,s.jsxs)(n.p,{children:["You should now see a ",(0,s.jsx)(n.code,{children:"matplotlib"})," popup with a plot of your ",(0,s.jsx)(n.code,{children:"Track"}),"."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:"https://github.com/farm-ng/amiga-dev-kit/assets/39603677/4193007c-4246-4d1f-a620-43aacd92813f",alt:"track"})}),"\n",(0,s.jsx)(n.h2,{id:"4-customize-the-run",children:"4. Customize the run"}),"\n",(0,s.jsxs)(n.p,{children:["You can use the flags ",(0,s.jsx)(n.code,{children:"--invert"})," and ",(0,s.jsx)(n.code,{children:"--save-track"})," to invert and/or save your track.\nCheck out more details by running:"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python main.py --help\n"})}),"\n",(0,s.jsxs)(n.p,{children:["If saving a track, you will need to specify a path (e.g., ",(0,s.jsx)(n.code,{children:"/Documents/my_track.json"}),")."]}),"\n",(0,s.jsx)(n.p,{children:"For example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python main.py --service-config service_config.json --save-track /Documents/my_track.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"TrackPlanner"})," class contains several methods for primitive motion planning segments:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create_straight_segment"}),": Use this method for creating straight turns."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create_ab_segment"}),": Use this method to connect your last position to a know location (ab line)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create_turn_segment"}),": Use this method to make the robot turn in place."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"create_arc_segment"}),": Use this method to create smooth turns such as a U-turn."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"5-optional-use-your-custom-track-on-autoplot",children:"5. [Optional] Use your custom track on Autoplot"}),"\n",(0,s.jsxs)(n.p,{children:["To use your custom track on Autoplot, all you have to do is copy it to ",(0,s.jsx)(n.code,{children:"/mnt/data/tracks"}),"\ninside your robot."]}),"\n",(0,s.jsx)(n.p,{children:"First, let's copy your custom track to your home directory on the robot:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"cd <to your custom track> # e.g., cd /Documents/\nscp <track-name> farm-ng-user-<username>@<your-brain>: # e.g., scp my_track.json farm-ng-user-jdoe@element-vegetable:\n"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"scp"})," will copy the track from your local computer to your robot.\nThe next step is to SSH into your robot and move your track to the correct destination"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"ssh <your-brain>\nsudo mv <track-name> /mnt/data/tracks # e.g., sudo mv my_track.json /mnt/data/tracks\n"})}),"\n",(0,s.jsx)(n.admonition,{title:"SSH access",type:"info",children:(0,s.jsxs)(n.p,{children:["Make sure to check ",(0,s.jsx)(n.a,{href:"/docs/ssh",children:"Access and Development on the Brain"})," to learn how to\nSSH into your brain"]})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Congrats you are done!"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>o});var s=t(6540);const r={},a=s.createContext(r);function i(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);