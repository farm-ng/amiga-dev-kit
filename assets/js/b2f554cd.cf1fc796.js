"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/2023/02/17/version-100","metadata":{"permalink":"/blog/2023/02/17/version-100","editUrl":"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/blog/2023-02-17-version-100.md","source":"@site/blog/2023-02-17-version-100.md","title":"Farm-ng Amiga Artichoke Released","description":"At farm-ng we love making tools for engineers, hackers, building communities, and inspiring people to make their own. For this reason, we are excited to announce the release of the Amiga Artichoke, the software development kit for the Farm-ng Amiga platform.","date":"2023-02-17T00:00:00.000Z","formattedDate":"February 17, 2023","tags":[{"label":"announcement","permalink":"/blog/tags/announcement"},{"label":"release","permalink":"/blog/tags/release"}],"readingTime":5.72,"hasTruncateMarker":false,"authors":[{"name":"Edgar Riba","title":"Robotics and Computer Vision Research Engineer","url":"https://github.com/edgarriba","imageURL":"https://avatars.githubusercontent.com/u/5157099?s=400&u=bbda35a12c82cbdca2d00ca1ce24323ccaef989d&v=4","key":"edgarriba"},{"name":"Gary Bradski","title":"VP and Computer Vision Godfather","url":"https://github.com/garybradski","imageURL":"https://avatars.githubusercontent.com/u/810997?v=4","key":"garybradski"},{"name":"Kyle Coble","title":"Robotics and Computer Vision Engineer","url":"https://github.com/Hackerman342","imageURL":"https://avatars.githubusercontent.com/u/53625197?v=4","key":"hackerman342"},{"name":"Chris Bradski","title":"Senior Software Engineer","url":"https://github.com/christopherbradski","imageURL":"https://media.licdn.com/dms/image/C5603AQFJ1W8ZkC8NDQ/profile-displayphoto-shrink_800_800/0/1517490482612?e=1681948800&v=beta&t=Yj0lepP5Yu1q0nnGEcKWOwZFwpWgfttfQXAWWOwaq0o","key":"christopherbradski"},{"name":"Ethan Rublee","title":"CEO at Farm-ng","url":"https://github.com/ethanrublee","imageURL":"https://avatars.githubusercontent.com/u/153678?v=4","key":"ethanrublee"}],"frontMatter":{"title":"Farm-ng Amiga Artichoke Released","authors":["edgarriba","garybradski","hackerman342","christopherbradski","ethanrublee"],"tags":["announcement","release"]}},"content":"At farm-ng we love making tools for engineers, hackers, building communities, and inspiring people to make their own. For this reason, we are excited to announce the release of the **Amiga Artichoke**, the software development kit for the Farm-ng Amiga platform.\\n\\nThe release goes aligned with the starting of the [Farm Robotics Challenge 2023](https://farmbot.ai/)\\n\\n## The Amiga\\n\\n![image](https://user-images.githubusercontent.com/53625197/187559379-b7b8fcf3-5fe7-4e14-aa47-fa0022f3801b.JPG)\\n\\nThe [**Amiga**](https://farm-ng.com/products/la-maquina-amiga) is a platform of robotic hardware and software built by farm-ng to enable farmers, hackers, engineers, roboticists, or anyone with a vision of creating ruggedized, waterproof, outdoor robotic rover applications.\\n\\nThe Amiga includes two main pieces, the Dashboard and the artificial intelligence (AI) Brain.\\n\\n### The Dashboard\\n\\n![image](https://user-images.githubusercontent.com/11846963/186734463-aa149b3a-7510-4d5a-99ea-f9a8a96775d2.jpg)\\n\\nThe Amiga robotics platform can operate under manual control through the Dashboard which is the master control of the CAN Bus commands and electricity flow to the motors. The Dashboard consists of ruggedized and waterproof case with a 4.3 inch daylight readable touchscreen display and is completely customizable through our ADK (Amiga-Dev-Kit) tools. Inside is a powerful microcontroller based on Adafruit\'s Feather m4 CAN, which can be programmed via CircuitPython.\\n\\nThe Dashboard allows the user to manually set speed limits and other system parameters as well as monitor system state (temperature, speed, CAN Bus traffic etc). It has a pendant connected to it which allows a stretchable wired interface to the Amiga with a joystick for steering and speed, brake, pose and control over any tools connected to and powered by the Amiga. An emergency stop (E-Stop) knob is attached to the Dashboard to allow users to instantly shut down the Amiga.\\n\\nFarm-ng allows developers to create new tools or adapt existing tools to the Amiga with an interface to extend electricity and CAN bus control signals and even to add your own custom CAN bus feather microcontroller. There are a number of standard farming tools already available such as 3 Point Lifts, seats, plows, seeders, weeders, dibblers etc, see https://farm-ng.com/collections/amiga-attachments\\n\\n### The Brain\\n\\n![image](https://cdn.shopify.com/s/files/1/0634/0241/0211/products/Brain-front.png?v=1674003215)\\n\\nThe Amiga Brain allows the platform to run complex artificial intelligence applications with a powerful computer encased in a weatherized, rugged aluminum case sporting a daylight readable 10.1 inch touch screen. Inside is a NVIDIA Xavier NX computer with up to 21 TOPS of performance. It includes CAN bus, USB and GIGe communication along with built-in WiFi. The brain allows a developer to write and deploy powerful AI applications using standard Python. There are several example applications and examples available at https://amiga.farm-ng.com/docs/examples/examples-index#brain-adk-examples\\n\\nMost Brain systems come with two [Oak-D Smart Camera](https://farm-ng.com/products/amiga-smart-camera-kit) which are powered by the system over ethernet and themselves can run AI models at 4 TOPS in addition to stereo depth computations.\\n\\n## Amiga OS\\n\\nThe Amiga Brain includes the Amiga OS, a robotics operating system exclusively developed for the Amiga platform and for its specific farming applications. The operating system is the one in charge to manage the different supported devices, and interact with the native or user provided.\\n\\nBelow you can see a couple of screenshots of the main layouts to navigate through the different apps, settings pages, or access to the developers tools.\\n\\n![launcher_main](https://user-images.githubusercontent.com/5157099/219821743-fc500b20-591b-4f93-8d26-fa5a536fd0c3.png)\\n\\n### Microservices Architecture\\n\\nThe Amiga OS and therefore the SDK are designed following a microservices architecture   leveraging gRPC as a lightweight protocol framework for message passing, and asyncio to concurrently orchestrate the different services as independent asynchronous tasks.\\n\\nBelow you can see a high level description of the Amiga OS architecture, starting from the Amiga platform which is the hardware layer, until the final user layer which are the GUI apps. The connection in between happens thanks to the gRPC message passing framework.\\n\\n![image](https://user-images.githubusercontent.com/5157099/219821793-fa1eec88-35c6-43fd-bcc2-dafe2a961366.png)\\n\\n### gRPC Services\\n\\nThe Amiga includes different core gRPC services that expose the basic sensors and intercommunication within the robot. We expose to the user the services to interact with the OAK-D cameras and the CAN bus used to receive the robot telemetry and send the signal to the motors.\\n\\nThe way to access this data is using the Python Open Source clients in the Python farm-ng-amiga package. We also provide examples about how to use this either as a standalone Python script, or as a Kivy application.\\n\\nBelow is a snippet of the Python API to interact with the Oak cameras:\\n\\n![amiga-sdk-1 0 0](https://user-images.githubusercontent.com/5157099/219821830-ebe221b7-c550-4f6c-8fab-2bbb7706806e.png)\\n\\n## The native Apps\\n\\nThe AmigaOS provides some native apps to fulfill different needs and requirements from a GUI perspective.\\n\\n### Recorder\\n\\nThe recorder app is the tool we provide to collect data from the GUI. It\u2019s a replica of the camera apps that you can find in any smartphone, but it records all the data (for example all CAN bus messages) coming from the connected sensors and devices.\\n\\nWith this app you can customize the numbers of sensors to record the data, adjust the camera parameters, and visualize in real time from the different cameras modes e.g rgb, disparity or left/right grayscale images.\\n\\nIn addition, we provide the open source library (in Python and C++) to decode the events file generated by the recorder. See: https://github.com/farm-ng/farm-ng-core\\n\\n![recorder_app](https://user-images.githubusercontent.com/5157099/219821846-386dd217-cf1f-43ee-becd-85ee5c3e2f9a.png)\\n\\n### Gallery / Playback\\n\\nWith this app you can explore the different files collected with the Recorder app and visualize in situ the collected data. In the future we\u2019ll provide more functionality to perform data annotation e.g to train AI models. In addition, we also provide a playback tool to visualize the video sequences at different speed and seek frames.\\n\\n![gallery_app](https://user-images.githubusercontent.com/5157099/219821855-b47b9465-f648-4ed5-b44d-deaca2517f0e.png)\\n\\n### File mover\\n\\nWe provide a simple application so that you can copy in your external drive all the data stored in the robot to perform later any type of data analysis.\\n\\n![file_mover](https://user-images.githubusercontent.com/5157099/219821868-d7f88168-0ffe-4eff-b4dd-1dfcd0cc71ba.png)\\n\\n## Create custom apps\\n\\nWith the Amiga SDK we want to encourage anyone to create their own applications and improve the development experience. For this reason we provide an app-template in github so that you can clone and start building your robotics app, integrate with any Python library from your vs-code via ssh directly in the robot (enjoying also the co-pilot).\\n\\nYou can follow this tutorial to start developing your Amiga apps: https://amiga.farm-ng.com/docs/brain/brain-apps\\n\\nFor a full developed tutorial, see the Virtual Joystick example, copy, paste, modify and have fun !\\nhttps://amiga.farm-ng.com/docs/tutorials/introduction/tutorial-introduction\\n\\n![virtual_joystick](https://user-images.githubusercontent.com/5157099/219821890-4c4478ed-374e-4213-819f-d67b78d1a4ea.png)\\n\\n## Ecosystem\\n\\n* Developer documentation\\n    * Documentation for how the key electrical and software work is available at https://amiga.farm-ng.com/docs/getting-started/\\n* Video tutorials:\\n    * Tutorials with a quickstart guide, an introduction to the components of the tractor and it\u2019s software development kit are available on this playlist: https://youtube.com/playlist?list=PLWQmpzk0y9NDXFKSwvCjYtRL8QNWfK4ND\\n* Discourse:\\n    * There is an active Discourse community at https://discourse.farm-ng.com/\\n* Farm Robotics Challenge:\\n    * Together with University of California Agriculture and Natural Resources division (UC ANR) and farm-ng, we are hosting a nation wide agriculture competition to use farm-ng\u2019s Amiga robot to create innovative solutions to automate an essential farm function on any crop or farm size. https://farm-ng.com/products/farmbot-ai-challenge-package\\n* Community examples:\\n    * https://github.com/farm-ng/virtual-joystick\\n    * https://github.com/farm-ng/camera-streamer\\n    * https://github.com/edgarriba/amiga-limbus-examples\\n\\n---\\n\\n<img src=\\"https://user-images.githubusercontent.com/5157099/219821724-69dfc97d-17fc-4a08-933a-e6fb2446495e.jpg\\"/>\\n\\n### Happy Coding :sunglasses:\\n\\n\\n#### >_ The Amiga Brain Team"}]}')}}]);