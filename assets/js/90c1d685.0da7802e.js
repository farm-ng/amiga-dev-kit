"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[3363],{1157:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>u,contentTitle:()=>s,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var i=a(7462),n=(a(7294),a(3905)),r=a(1839);const o={id:"virtual-joystick-overview",title:"00 - Virtual Joystick Overview"},s="Virtual Joystick Overview",l={unversionedId:"tutorials/virtual_joystick/virtual-joystick-overview",id:"tutorials/virtual_joystick/virtual-joystick-overview",title:"00 - Virtual Joystick Overview",description:"This is out-of-date for brains running v2.x Amiga OS software.",source:"@site/docs/tutorials/virtual_joystick/00_overview.md",sourceDirName:"tutorials/virtual_joystick",slug:"/tutorials/virtual_joystick/virtual-joystick-overview",permalink:"/docs/tutorials/virtual_joystick/virtual-joystick-overview",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/tutorials/virtual_joystick/00_overview.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"virtual-joystick-overview",title:"00 - Virtual Joystick Overview"},sidebar:"examples",previous:{title:"03 - Python Implementation",permalink:"/docs/tutorials/camera_streamer/camera-stream"},next:{title:"01 - Template Starter",permalink:"/docs/tutorials/virtual_joystick/template-starter"}},u={},c=[{value:"Link to <code>virtual-joystick</code>",id:"link-to-virtual-joystick",level:2},{value:"Block diagram",id:"block-diagram",level:2}],m={toc:c};function p(t){let{components:e,...a}=t;return(0,n.kt)("wrapper",(0,i.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"virtual-joystick-overview"},"Virtual Joystick Overview"),(0,n.kt)("admonition",{title:"deprecation warning",type:"caution"},(0,n.kt)("p",{parentName:"admonition"},"This is out-of-date for brains running ",(0,n.kt)("inlineCode",{parentName:"p"},"v2.x")," Amiga OS software.",(0,n.kt)("br",null),"\nThis tutorial only applies to brains running Amiga OS ",(0,n.kt)("inlineCode",{parentName:"p"},"v1.x")," versions.",(0,n.kt)("br",null),"\nPlease check back for an updated tutorial for brains running ",(0,n.kt)("inlineCode",{parentName:"p"},"v2.x")," Amiga OS software.")),(0,n.kt)("admonition",{type:"tip"},(0,n.kt)("p",{parentName:"admonition"},"This tutorial builds off of the\n",(0,n.kt)("a",{parentName:"p",href:"/docs/tutorials/introduction/tutorial-introduction"},(0,n.kt)("strong",{parentName:"a"},"Tutorial Introduction"))," and the\n",(0,n.kt)("a",{parentName:"p",href:"/docs/tutorials/camera_streamer/camera-streamer-overview"},(0,n.kt)("strong",{parentName:"a"},"Camera Streamer Tutorial")),",\nso please check those out if you have not already.")),(0,n.kt)("h2",{id:"link-to-virtual-joystick"},(0,n.kt)("a",{parentName:"h2",href:"https://github.com/farm-ng/virtual-joystick"},"Link to ",(0,n.kt)("inlineCode",{parentName:"a"},"virtual-joystick"))),(0,n.kt)("p",null,"This example application and tutorial is designed to enable you\nto develop your own custom applications and deploy them to the\nAmiga brain.\nThe goal of this tutorial is to take you step-by-step from the\ntemplate repository to the full\n",(0,n.kt)("a",{parentName:"p",href:"https://github.com/farm-ng/virtual-joystick"},(0,n.kt)("strong",{parentName:"a"},(0,n.kt)("inlineCode",{parentName:"strong"},"virtual-joystick")))," example.\nThen you can mirror what you've done here in your own custom app\ndevelopment!"),(0,n.kt)("p",null,"On the brain, there are multiple gRPC services running in the\nbackground, including the oak camera service and the canbus\nservice.\nWe will teach you how to interact with these two services through\nthe camera client and canbus client, respectively.\nWe will also show you how to create a basic kivy application, a\ncustom kivy widget, and use gRPC and asyncio in that application."),(0,n.kt)("p",null,"The topics covered in this tutorial include:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Creating kivy applications"),(0,n.kt)("li",{parentName:"ul"},"Custom kivy widgets"),(0,n.kt)("li",{parentName:"ul"},"GRPC / asyncio application development"),(0,n.kt)("li",{parentName:"ul"},"Streaming an Oak camera with the camera client"),(0,n.kt)("li",{parentName:"ul"},"Streaming Amiga state information with the canbus client"),(0,n.kt)("li",{parentName:"ul"},"Auto control mode of Amiga robot with the canbus client")),(0,n.kt)("admonition",{type:"info"},(0,n.kt)("p",{parentName:"admonition"},"We hope that after completing this tutorial, and the\npredecessors, you are prepared to develop your own custom Amiga\nbrain applications on the Amiga brain.\nIf you feel we missed any key details, please let us know at\n",(0,n.kt)("a",{parentName:"p",href:"https://discourse.farm-ng.com/"},(0,n.kt)("strong",{parentName:"a"},"discourse.farm-ng.com"))," so we\ncan help you through it and add it to the tutorial for everyone\nelse to benefit from!")),(0,n.kt)("h2",{id:"block-diagram"},"Block diagram"),(0,n.kt)(r.G,{chart:"  flowchart BT;\n    subgraph kivy_window\n        direction LR\n        VirtualJoystickWidget\n        ImageTexture\n        Displayed_Labels\n    end\n\n    subgraph AmigaOS\n        OakCameraServices\n        CanbusService\n    end\n\n    subgraph VirtualJoystickApp\n        VirtualJoystickWidget -- commands --\x3e CanbusClient\n        CanbusClient -- measured rates --\x3e Displayed_Labels\n        OakCameraClient -- decoded jpeg --\x3e ImageTexture\n    end\n\n    subgraph OakCameraServices\n        direction LR\n        Oak0\n        Oak1\n        Oak2\n        Oak3\n    end\n\n    Oak0 -- streamFrames rpc --\x3e OakCameraClient\n    CanbusService -- streamCanbusMessages rpc --\x3e CanbusClient\n    CanbusService <-- sendCanbusMessage rpc --\x3e CanbusClient",mdxType:"Mermaid"}))}p.isMDXComponent=!0}}]);