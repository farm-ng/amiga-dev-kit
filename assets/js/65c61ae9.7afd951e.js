"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[2483],{1554:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var i=s(5893),l=s(1151);const a={sidebar_label:"main_loop",title:"utils.main_loop"},d=void 0,r={id:"reference/circuitpy/utils/main_loop",title:"utils.main_loop",description:"get\\node\\id",source:"@site/docs/reference/circuitpy/utils/main_loop.md",sourceDirName:"reference/circuitpy/utils",slug:"/reference/circuitpy/utils/main_loop",permalink:"/docs/reference/circuitpy/utils/main_loop",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/circuitpy/utils/main_loop.md",tags:[],version:"current",frontMatter:{sidebar_label:"main_loop",title:"utils.main_loop"},sidebar:"api",previous:{title:"io",permalink:"/docs/reference/circuitpy/utils/io"},next:{title:"nvm",permalink:"/docs/reference/circuitpy/utils/nvm"}},t={},c=[{value:"get_node_id",id:"get_node_id",level:4},{value:"MainLoop Objects",id:"mainloop-objects",level:2},{value:"io_debug_str",id:"io_debug_str",level:4},{value:"can_debug_str",id:"can_debug_str",level:4},{value:"update_mem",id:"update_mem",level:4},{value:"init_app",id:"init_app",level:4},{value:"handle_supervisor_req",id:"handle_supervisor_req",level:4},{value:"handle_message",id:"handle_message",level:4},{value:"can_dummy",id:"can_dummy",level:4},{value:"poll_can",id:"poll_can",level:4},{value:"update_can_stats",id:"update_can_stats",level:4},{value:"update_display",id:"update_display",level:4},{value:"draw_debug",id:"draw_debug",level:4},{value:"iter",id:"iter",level:4},{value:"loop",id:"loop",level:4}];function o(e){const n={code:"code",h2:"h2",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,l.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h4,{id:"get_node_id",children:"get_node_id"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def get_node_id()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns the value from the node_id.txt file in root of CIRCUITPY drive, if exists Else returns an arbitrary\ndefault node id."}),"\n",(0,i.jsx)(n.h2,{id:"mainloop-objects",children:"MainLoop Objects"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"class MainLoop()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Main driver for all farm-ng apps run on microcontrollers."}),"\n",(0,i.jsx)(n.h4,{id:"io_debug_str",children:"io_debug_str"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def io_debug_str()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns debug string for serial console."}),"\n",(0,i.jsx)(n.h4,{id:"can_debug_str",children:"can_debug_str"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def can_debug_str()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Returns string with details on CAN bus status."}),"\n",(0,i.jsx)(n.h4,{id:"update_mem",children:"update_mem"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def update_mem()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Check RAM stats on mcu."}),"\n",(0,i.jsx)(n.h4,{id:"init_app",children:"init_app"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def init_app()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initialize the app loaded on the mcu."}),"\n",(0,i.jsx)(n.h4,{id:"handle_supervisor_req",children:"handle_supervisor_req"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def handle_supervisor_req(message)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Handle supervisor request CAN message."}),"\n",(0,i.jsx)(n.h4,{id:"handle_message",children:"handle_message"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def handle_message(message)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Process each received CAN message."}),"\n",(0,i.jsx)(n.h4,{id:"can_dummy",children:"can_dummy"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def can_dummy(message)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Dummy function that is called when message does not meet filter."}),"\n",(0,i.jsx)(n.h4,{id:"poll_can",children:"poll_can"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def poll_can()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Checks for can messages to parse."}),"\n",(0,i.jsx)(n.h4,{id:"update_can_stats",children:"update_can_stats"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def update_can_stats()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Query CAN bus status."}),"\n",(0,i.jsx)(n.h4,{id:"update_display",children:"update_display"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def update_display(display: Display)\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Called by ",(0,i.jsx)(n.strong,{children:"init"})," delta tracker object."]}),"\n",(0,i.jsx)(n.h4,{id:"draw_debug",children:"draw_debug"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def draw_debug(display: Display)\n"})}),"\n",(0,i.jsx)(n.p,{children:"Show debug stats on the dashboard display."}),"\n",(0,i.jsx)(n.h4,{id:"iter",children:"iter"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def iter()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Method called every loop of the main while loop driving the app on the microcontroller."}),"\n",(0,i.jsx)(n.h4,{id:"loop",children:"loop"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def loop()\n"})}),"\n",(0,i.jsx)(n.p,{children:"Initializes the main while loop, with an exception handler for dashboard that displays exceptions on the\nscreen."})]})}function p(e={}){const{wrapper:n}={...(0,l.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>r,a:()=>d});var i=s(7294);const l={},a=i.createContext(l);function d(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:d(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);