"use strict";(self.webpackChunkamiga_developers_website=self.webpackChunkamiga_developers_website||[]).push([[7444],{7225:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var s=t(74848),a=t(28453);const i={id:"camera-settings",title:"Camera Settings"},r=void 0,c={id:"examples/camera_settings/camera-settings",title:"Camera Settings",description:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:",source:"@site/docs/examples/camera_settings/README.md",sourceDirName:"examples/camera_settings",slug:"/examples/camera_settings/",permalink:"/docs/examples/camera_settings/",draft:!1,unlisted:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/examples/camera_settings/README.md",tags:[],version:"current",frontMatter:{id:"camera-settings",title:"Camera Settings"},sidebar:"examples",previous:{title:"Camera Client",permalink:"/docs/examples/camera_client/"},next:{title:"Camera Calibration",permalink:"/docs/examples/camera_calibration/"}},o={},l=[{value:"1. Install the farm-ng Brain ADK package",id:"1-install-the-farm-ng-brain-adk-package",level:3},{value:"2. Setup",id:"2-setup",level:3},{value:"3. Install the example&#39;s dependencies",id:"3-install-the-examples-dependencies",level:3},{value:"4. Execute the Python script",id:"4-execute-the-python-script",level:3},{value:"5. Customize run",id:"5-customize-run",level:3},{value:"6. Code overview",id:"6-code-overview",level:3}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.admonition,{title:"Basic Knowledge Requirements",type:"info",children:[(0,s.jsx)(n.p,{children:"Before diving into this code, here's a quick heads-up on what you'll need to be familiar with:"}),(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Python Programming"}),": It's important to have a good grasp of Python, especially with concepts\nlike ",(0,s.jsx)(n.code,{children:"functions"}),", ",(0,s.jsx)(n.code,{children:"loops"}),", and ",(0,s.jsx)(n.code,{children:"classes"}),", since the example utilizes these fundamentals."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Asynchronous Programming with asyncio"}),": Familiarity with Python's asyncio for writing concurrent\ncode using the ",(0,s.jsx)(n.code,{children:"async/await"})," syntax."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Camera Configuration and Control"}),": Knowledge of camera settings and configurations\n(possibly specific to the OAK-D camera) would be beneficial for understanding how the camera\nsettings are manipulated in the code."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.a,{href:"/docs/concepts/oak_service/",children:"farm-ng Oak Service Overview"})}),":\nThis overview provides a base understanding of the gRPC service the client you create will connect to."]}),"\n"]})]}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.a,{href:"https://github.com/farm-ng/farm-ng-amiga/blob/main/py/examples/camera_settings/main.py",children:(0,s.jsx)(n.strong,{children:"Camera Settings"})}),"\nexample operates as a standalone Python script,\nin which an ",(0,s.jsx)(n.code,{children:"EventClient"})," to an Oak camera service running on an Amiga brain is created.\nThe settings of an Oak camera camera are set,\nand the returned result is printed in the terminal."]}),"\n",(0,s.jsxs)(n.p,{children:["You can either run this example directly on a brain by ",(0,s.jsx)(n.code,{children:"ssh"}),"'ing in,\nor use your local PC.\nIf using your local PC, it should be either connected to the same local network as the brain\nor linked to it through ",(0,s.jsxs)(n.a,{href:"https://tailscale.com/",children:[(0,s.jsx)(n.strong,{children:"tailscale"}),"."]})]}),"\n",(0,s.jsxs)(n.p,{children:["Ensure that a ",(0,s.jsx)(n.a,{href:"/docs/brain/",children:(0,s.jsx)(n.strong,{children:"farm-ng brain"})})," running Oak cameras is active."]}),"\n",(0,s.jsxs)(n.h3,{id:"1-install-the-farm-ng-brain-adk-package",children:["1. Install the ",(0,s.jsx)(n.a,{href:"/docs/brain/brain-install",children:"farm-ng Brain ADK package"})]}),"\n",(0,s.jsx)(n.h3,{id:"2-setup",children:"2. Setup"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"It is recommended to also install these dependencies and run the\nexample in the brain ADK virtual environment."})}),"\n",(0,s.jsx)(n.p,{children:"Create first a virtual environment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python3 -m venv venv\nsource venv/bin/activate\n"})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# assuming you're already in the amiga-dev-kit/ directory\ncd farm-ng-amiga/py/examples/camera_settings\n"})}),"\n",(0,s.jsx)(n.h3,{id:"3-install-the-examples-dependencies",children:"3. Install the example's dependencies"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip3 install -r requirements.txt\n"})}),"\n",(0,s.jsx)(n.h3,{id:"4-execute-the-python-script",children:"4. Execute the Python script"}),"\n",(0,s.jsxs)(n.admonition,{type:"info",children:[(0,s.jsxs)(n.p,{children:["To run this script from your PC, you need to update the ",(0,s.jsx)(n.code,{children:"service_config.json"}),"\nby modifying the ",(0,s.jsx)(n.code,{children:"host"})," field with your Amiga brain name."]}),(0,s.jsxs)(n.p,{children:["Please check out ",(0,s.jsx)(n.a,{href:"/docs/concepts/system_overview/#where-to-run-the-examples",children:"Amiga Development 101"}),"\nfor more details."]})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"python3 main.py --service-config service_config.json --camera-settings camera_settings.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"5-customize-run",children:"5. Customize run"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# usage: amiga-camera-settings [-h] --service-config SERVICE_CONFIG\n#                              [--camera-settings CAMERA_SETTINGS] [--stream-name {rgb,mono}]\n#\n# optional arguments:\n#   -h, --help            show this help message and exit\n#   --service-config SERVICE_CONFIG\n#                         The camera service config.\n#   --camera-settings CAMERA_SETTINGS\n#                         The camera control settings.\n#   --stream-name {rgb,mono}\n#                         The stream name to set the settings for.\n"})}),"\n",(0,s.jsx)(n.h3,{id:"6-code-overview",children:"6. Code overview"}),"\n",(0,s.jsxs)(n.p,{children:["In this example we use the ",(0,s.jsx)(n.code,{children:"EventClient"})," with the ",(0,s.jsx)(n.code,{children:"request_reply"})," method to receive and\nset the camera settings. The ",(0,s.jsx)(n.code,{children:"request_reply"})," method is a coroutine that returns a ",(0,s.jsx)(n.code,{children:"Future"})," object.\nThe ",(0,s.jsx)(n.code,{children:"Future"})," object is used to retrieve the result of the request."]}),"\n",(0,s.jsxs)(n.p,{children:["To get the settings, the path to the camera service is\n",(0,s.jsx)(n.code,{children:"/camera_settings/<stream_name>"})," and the request message is ",(0,s.jsx)(n.code,{children:"Empty"}),".\nThe reply message is ",(0,s.jsx)(n.code,{children:"oak_pb2.CameraSettings"})," and contains the current camera settings."]}),"\n",(0,s.jsxs)(n.p,{children:["To set the settings, the path to the camera service is ",(0,s.jsx)(n.code,{children:"/camera_settings/<stream_name>"}),"\nand the request message is ",(0,s.jsx)(n.code,{children:"oak_pb2.CameraSettings"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["You can explore the files ",(0,s.jsx)(n.code,{children:"service_config.json"})," to customize the camera service configuration\nand ",(0,s.jsx)(n.code,{children:"camera_settings.json"})," to customize the camera settings."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'async def main(service_config_path: Path, settings_config_path: Path, stream_name: str) -> None:\n    """Request the camera calibration from the camera service.\n\n    Args:\n        service_config_path (Path): The path to the camera service config.\n        settings_config_path (Path): The path to the camera settings config.\n        stream_name (str): The stream name to set the settings for.\n    """\n    # create a client to the camera service\n    config: EventServiceConfig = proto_from_json_file(service_config_path, EventServiceConfig())\n\n    # create camera setting from the json file\n    camera_settings_request: oak_pb2.CameraSettings | Empty = Empty()\n    if settings_config_path:\n        camera_settings_request = proto_from_json_file(settings_config_path, oak_pb2.CameraSettings())\n\n    # send a request to the camera service\n    # the camera service will reply with the current camera settings\n    # available settings are:\n    #   - /camera_settings/rgb\n    #   - /camera_settings/mono\n    camera_settings: oak_pb2.CameraSettings = await EventClient(config).request_reply(\n        f"/camera_settings/{stream_name}", camera_settings_request, decode=True\n    )\n\n    print(camera_settings)\n\n\nif __name__ == "__main__":\n    parser = argparse.ArgumentParser(prog="amiga-camera-settings")\n    parser.add_argument("--service-config", type=Path, required=True, help="The camera service config.")\n    parser.add_argument("--camera-settings", type=Path, required=False, help="The camera control settings.")\n    parser.add_argument(\n        "--stream-name",\n        type=str,\n        choices=["rgb", "mono"],\n        default="rgb",\n        help="The stream name to set the settings for.",\n    )\n    args = parser.parse_args()\n\n    asyncio.run(main(args.service_config, args.camera_settings, args.stream_name))\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsxs)(n.p,{children:["We highly recommend to have some basic knowledge about\n",(0,s.jsx)(n.a,{href:"https://docs.python.org/3/library/asyncio.html",children:(0,s.jsx)(n.strong,{children:(0,s.jsx)(n.code,{children:"asyncio"})})}),"."]})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const a={},i=s.createContext(a);function r(e){const n=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),s.createElement(i.Provider,{value:n},e.children)}}}]);