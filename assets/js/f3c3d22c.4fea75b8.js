"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[6075],{6129:(t,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>n,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>c});var s=a(7462),r=(a(7294),a(3905));a(1839);const i={sidebar_label:"state_estimator_client",title:"state_estimator.state_estimator_client"},n=void 0,o={unversionedId:"reference/brain/state_estimator/state_estimator_client",id:"reference/brain/state_estimator/state_estimator_client",title:"state_estimator.state_estimator_client",description:"StateEstimatorClientConfig Objects",source:"@site/docs/reference/brain/state_estimator/state_estimator_client.md",sourceDirName:"reference/brain/state_estimator",slug:"/reference/brain/state_estimator/state_estimator_client",permalink:"/docs/reference/brain/state_estimator/state_estimator_client",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/brain/state_estimator/state_estimator_client.md",tags:[],version:"current",frontMatter:{sidebar_label:"state_estimator_client",title:"state_estimator.state_estimator_client"}},l={},c=[{value:"StateEstimatorClientConfig Objects",id:"stateestimatorclientconfig-objects",level:2},{value:"StateEstimatorServiceState Objects",id:"stateestimatorservicestate-objects",level:2},{value:"StateEstimatorClient Objects",id:"stateestimatorclient-objects",level:2},{value:"server_address",id:"server_address",level:4}],m={toc:c};function d(t){let{components:e,...a}=t;return(0,r.kt)("wrapper",(0,s.Z)({},m,a,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"stateestimatorclientconfig-objects"},"StateEstimatorClientConfig Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@dataclass\nclass StateEstimatorClientConfig()\n")),(0,r.kt)("p",null,"StateEstimator client configuration."),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Attributes"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"port")," ",(0,r.kt)("em",{parentName:"li"},"int")," - the port to connect to the server."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"address")," ",(0,r.kt)("em",{parentName:"li"},"str")," - the address to connect to the server.")),(0,r.kt)("h2",{id:"stateestimatorservicestate-objects"},"StateEstimatorServiceState Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class StateEstimatorServiceState()\n")),(0,r.kt)("p",null,"State estimator service state."),(0,r.kt)("h2",{id:"stateestimatorclient-objects"},"StateEstimatorClient Objects"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"class StateEstimatorClient()\n")),(0,r.kt)("h4",{id:"server_address"},"server","_","address"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef server_address() -> str\n")),(0,r.kt)("p",null,"Returns the composed address and port."))}d.isMDXComponent=!0}}]);