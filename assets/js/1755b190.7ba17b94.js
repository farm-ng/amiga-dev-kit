"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1520],{5034:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>p});var d=a(7462),n=(a(7294),a(3905));a(1839);const l={sidebar_label:"packet",title:"utils.packet"},s=void 0,o={unversionedId:"reference/circuitpy/utils/packet",id:"reference/circuitpy/utils/packet",title:"utils.packet",description:"PendantButtons Objects",source:"@site/docs/reference/circuitpy/utils/packet.md",sourceDirName:"reference/circuitpy/utils",slug:"/reference/circuitpy/utils/packet",permalink:"/docs/reference/circuitpy/utils/packet",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/reference/circuitpy/utils/packet.md",tags:[],version:"current",frontMatter:{sidebar_label:"packet",title:"utils.packet"},sidebar:"api",previous:{title:"nvm",permalink:"/docs/reference/circuitpy/utils/nvm"},next:{title:"version",permalink:"/docs/reference/circuitpy/utils/version"}},c={},p=[{value:"PendantButtons Objects",id:"pendantbuttons-objects",level:2},{value:"AmigaControlState Objects",id:"amigacontrolstate-objects",level:2},{value:"NodeState Objects",id:"nodestate-objects",level:2},{value:"BOOTUP",id:"bootup",level:4},{value:"STOPPED",id:"stopped",level:4},{value:"OPERATIONAL",id:"operational",level:4},{value:"PRE_OPERATIONAL",id:"pre_operational",level:4},{value:"Packet Objects",id:"packet-objects",level:2},{value:"from_can_data",id:"from_can_data",level:4},{value:"stamp",id:"stamp",level:4},{value:"fresh",id:"fresh",level:4},{value:"age",id:"age",level:4},{value:"PendantState Objects",id:"pendantstate-objects",level:2},{value:"encode",id:"encode",level:4},{value:"decode",id:"decode",level:4},{value:"PendantLEDs Objects",id:"pendantleds-objects",level:2},{value:"encode",id:"encode-1",level:4},{value:"decode",id:"decode-1",level:4},{value:"AmigaRpdo1 Objects",id:"amigarpdo1-objects",level:2},{value:"encode",id:"encode-2",level:4},{value:"decode",id:"decode-2",level:4},{value:"AmigaTpdo1 Objects",id:"amigatpdo1-objects",level:2},{value:"encode",id:"encode-3",level:4},{value:"decode",id:"decode-3",level:4},{value:"SupervisorReq Objects",id:"supervisorreq-objects",level:2},{value:"cob_id",id:"cob_id",level:4},{value:"encode",id:"encode-4",level:4},{value:"decode",id:"decode-4",level:4},{value:"SupervisorRep Objects",id:"supervisorrep-objects",level:2},{value:"cob_id",id:"cob_id-1",level:4},{value:"encode",id:"encode-5",level:4},{value:"decode",id:"decode-5",level:4},{value:"EstopRequest Objects",id:"estoprequest-objects",level:2},{value:"cob_id",id:"cob_id-2",level:4},{value:"encode",id:"encode-6",level:4},{value:"decode",id:"decode-6",level:4},{value:"EstopReply Objects",id:"estopreply-objects",level:2},{value:"cob_id",id:"cob_id-3",level:4},{value:"encode",id:"encode-7",level:4},{value:"decode",id:"decode-7",level:4},{value:"BumperState Objects",id:"bumperstate-objects",level:2},{value:"cob_id",id:"cob_id-4",level:4},{value:"encode",id:"encode-8",level:4},{value:"decode",id:"decode-8",level:4},{value:"FirmwareVersion Objects",id:"firmwareversion-objects",level:2},{value:"encode",id:"encode-9",level:4},{value:"decode",id:"decode-9",level:4},{value:"CanTapeTransferTPDO Objects",id:"cantapetransfertpdo-objects",level:2},{value:"State Objects",id:"state-objects",level:2},{value:"TRANSFERRING_FAILED",id:"transferring_failed",level:4},{value:"encode",id:"encode-10",level:4},{value:"decode",id:"decode-10",level:4},{value:"CanTapeTransferRPDO Objects",id:"cantapetransferrpdo-objects",level:2},{value:"encode",id:"encode-11",level:4},{value:"decode",id:"decode-11",level:4},{value:"FarmngHeartbeat Objects",id:"farmngheartbeat-objects",level:2},{value:"encode",id:"encode-12",level:4},{value:"decode",id:"decode-12",level:4},{value:"RmdSpeedCommand Objects",id:"rmdspeedcommand-objects",level:2},{value:"encode",id:"encode-13",level:4},{value:"decode",id:"decode-13",level:4},{value:"RmdSpeedResponse Objects",id:"rmdspeedresponse-objects",level:2},{value:"encode",id:"encode-14",level:4},{value:"decode",id:"decode-14",level:4},{value:"FarmngDebugTimer Objects",id:"farmngdebugtimer-objects",level:2},{value:"cob_id",id:"cob_id-5",level:4},{value:"encode",id:"encode-15",level:4},{value:"decode",id:"decode-15",level:4},{value:"FarmngDebugMemory Objects",id:"farmngdebugmemory-objects",level:2},{value:"cob_id",id:"cob_id-6",level:4},{value:"encode",id:"encode-16",level:4},{value:"decode",id:"decode-16",level:4}],r={toc:p};function u(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,d.Z)({},r,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"pendantbuttons-objects"},"PendantButtons Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class PendantButtons()\n")),(0,n.kt)("p",null,"Bit field for pendant buttons."),(0,n.kt)("h2",{id:"amigacontrolstate-objects"},"AmigaControlState Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaControlState()\n")),(0,n.kt)("p",null,"State of the Amiga vehicle control unit (VCU)"),(0,n.kt)("h2",{id:"nodestate-objects"},"NodeState Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class NodeState()\n")),(0,n.kt)("p",null,"State of the MainLoop."),(0,n.kt)("h4",{id:"bootup"},"BOOTUP"),(0,n.kt)("p",null,"Boot up / Initializing"),(0,n.kt)("h4",{id:"stopped"},"STOPPED"),(0,n.kt)("p",null,"Stopped"),(0,n.kt)("h4",{id:"operational"},"OPERATIONAL"),(0,n.kt)("p",null,"Operational"),(0,n.kt)("h4",{id:"pre_operational"},"PRE","_","OPERATIONAL"),(0,n.kt)("p",null,"Pre-Operational"),(0,n.kt)("h2",{id:"packet-objects"},"Packet Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class Packet()\n")),(0,n.kt)("p",null,"Base class inherited by all CAN message data structures."),(0,n.kt)("h4",{id:"from_can_data"},"from","_","can","_","data"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"@classmethod\ndef from_can_data(cls, data)\n")),(0,n.kt)("p",null,"Unpack CAN data directly into CAN message data structure."),(0,n.kt)("h4",{id:"stamp"},"stamp"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def stamp()\n")),(0,n.kt)("p",null,"Time most recent message was received."),(0,n.kt)("h4",{id:"fresh"},"fresh"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def fresh(thresh_ms=500)\n")),(0,n.kt)("p",null,"Returns False if the most recent message is older than ",(0,n.kt)("inlineCode",{parentName:"p"},"thresh_ms")),(0,n.kt)("h4",{id:"age"},"age"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def age()\n")),(0,n.kt)("p",null,"Age of the most recent message."),(0,n.kt)("h2",{id:"pendantstate-objects"},"PendantState Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class PendantState(Packet)\n")),(0,n.kt)("p",null,"State of the Pendant (joystick position ","&"," pressed buttons)"),(0,n.kt)("h4",{id:"encode"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"pendantleds-objects"},"PendantLEDs Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class PendantLEDs(Packet)\n")),(0,n.kt)("p",null,"Command to the pendant on LEDs / backlight to illuminate."),(0,n.kt)("h4",{id:"encode-1"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-1"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"amigarpdo1-objects"},"AmigaRpdo1 Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaRpdo1(Packet)\n")),(0,n.kt)("p",null,"State, speed, and angular rate command (request) sent to the Amiga vehicle control unit (VCU)."),(0,n.kt)("p",null,"New in fw v0.1.9 / farm-ng-amiga v0.0.7: Add pto ","&"," hbridge control. Message data is now 8 bytes (was 5)."),(0,n.kt)("h4",{id:"encode-2"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-2"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"amigatpdo1-objects"},"AmigaTpdo1 Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class AmigaTpdo1(Packet)\n")),(0,n.kt)("p",null,"State, speed, and angular rate of the Amiga vehicle control unit (VCU)."),(0,n.kt)("p",null,"New in fw v0.1.9 / farm-ng-amiga v0.0.7: Add pto ","&"," hbridge control. Message data is now 8 bytes (was 5)."),(0,n.kt)("h4",{id:"encode-3"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-3"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"supervisorreq-objects"},"SupervisorReq Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class SupervisorReq(Packet)\n")),(0,n.kt)("p",null,"Supervisor request."),(0,n.kt)("h4",{id:"cob_id"},"cob","_","id"),(0,n.kt)("p",null,"SDO command"),(0,n.kt)("h4",{id:"encode-4"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-4"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"supervisorrep-objects"},"SupervisorRep Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class SupervisorRep(Packet)\n")),(0,n.kt)("p",null,"Supervisor response."),(0,n.kt)("h4",{id:"cob_id-1"},"cob","_","id"),(0,n.kt)("p",null,"SDO reply"),(0,n.kt)("h4",{id:"encode-5"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-5"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"estoprequest-objects"},"EstopRequest Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class EstopRequest(Packet)\n")),(0,n.kt)("p",null,"An 8 byte packet that requests an e-stop."),(0,n.kt)("p",null,"We only care about the first byte and throw the rest away (for now). The other bytes can be used as a message state\nunique to the device requesting the e-stop."),(0,n.kt)("h4",{id:"cob_id-2"},"cob","_","id"),(0,n.kt)("p",null,"TPDO1"),(0,n.kt)("h4",{id:"encode-6"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-6"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"estopreply-objects"},"EstopReply Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class EstopReply(Packet)\n")),(0,n.kt)("p",null,"An 8 byte packet that responds with registered e-stop devices."),(0,n.kt)("p",null,"We only care about the first 4 bytes and throw the rest away (for now)."),(0,n.kt)("h4",{id:"cob_id-3"},"cob","_","id"),(0,n.kt)("p",null,"RPDO1"),(0,n.kt)("h4",{id:"encode-7"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-7"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"bumperstate-objects"},"BumperState Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class BumperState(Packet)\n")),(0,n.kt)("p",null,"This is an expansion of the EstopRequest packet that also includes the state of the 4 Bumpers. This is so\nthe dashboard can treat the BumperState as a generic EstopRequest, ignoring the contents of any byte besides\nthe estop_request bool in the first signed char. While other components could look for more insight from the\nBumperState encoded data."),(0,n.kt)("p",null,"Encoding:"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"- b: signed char used as bool for true/false estop-request\n- h: signed short encoding pressed bumpers\n- 5x: pad bytes\n")),(0,n.kt)("p",null,"For the circuitpy/examples/bumpers/main.py:\n(True =",">"," corresponding pin is pressed) button states are packed as follows:\n(0x1 ",(0,n.kt)("em",{parentName:"p"}," board.D10) + (0x2 ")," board.D11) + (0x4 ",(0,n.kt)("em",{parentName:"p"}," board.12) + (0x8 ")," board.b13)\nIn other words, pins are bit coded in the first 4 bits\nbit 0 =",">"," pin D10, bit 1 =",">"," pin D11, bit 2 =",">"," pin D12, bit 3 =",">"," pin D13"),(0,n.kt)("h4",{id:"cob_id-4"},"cob","_","id"),(0,n.kt)("p",null,"TPDO1"),(0,n.kt)("h4",{id:"encode-8"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-8"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"firmwareversion-objects"},"FirmwareVersion Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class FirmwareVersion(Packet)\n")),(0,n.kt)("p",null,"Firmware version running on device."),(0,n.kt)("h4",{id:"encode-9"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-9"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"cantapetransfertpdo-objects"},"CanTapeTransferTPDO Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class CanTapeTransferTPDO(Packet)\n")),(0,n.kt)("p",null,"Iterative response for file transfers over CAN."),(0,n.kt)("h2",{id:"state-objects"},"State Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class State()\n")),(0,n.kt)("p",null,"Current state of file transfer over CAN."),(0,n.kt)("h4",{id:"transferring_failed"},"TRANSFERRING","_","FAILED"),(0,n.kt)("p",null,"out of order messages"),(0,n.kt)("h4",{id:"encode-10"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-10"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"cantapetransferrpdo-objects"},"CanTapeTransferRPDO Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class CanTapeTransferRPDO(Packet)\n")),(0,n.kt)("p",null,"Packet containing 5 bytes of file for file transfers over CAN."),(0,n.kt)("h4",{id:"encode-11"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-11"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"farmngheartbeat-objects"},"FarmngHeartbeat Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class FarmngHeartbeat(Packet)\n")),(0,n.kt)("p",null,"Custom Heartbeat message = status sent regularly by farm-ng components"),(0,n.kt)("h4",{id:"encode-12"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-12"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"rmdspeedcommand-objects"},"RmdSpeedCommand Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class RmdSpeedCommand(Packet)\n")),(0,n.kt)("p",null,"Speed command to RMD servo motor (controlled with PTO)"),(0,n.kt)("h4",{id:"encode-13"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-13"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"rmdspeedresponse-objects"},"RmdSpeedResponse Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class RmdSpeedResponse(Packet)\n")),(0,n.kt)("p",null,"Response from RMD servo motor to speed command (controlled with PTO)"),(0,n.kt)("h4",{id:"encode-14"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-14"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"farmngdebugtimer-objects"},"FarmngDebugTimer Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class FarmngDebugTimer(Packet)\n")),(0,n.kt)("p",null,"To be used for tracking the time of up to 8 dt time steps."),(0,n.kt)("h4",{id:"cob_id-5"},"cob","_","id"),(0,n.kt)("p",null,"TPDO4"),(0,n.kt)("h4",{id:"encode-15"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-15"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."),(0,n.kt)("h2",{id:"farmngdebugmemory-objects"},"FarmngDebugMemory Objects"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"class FarmngDebugMemory(Packet)\n")),(0,n.kt)("p",null,"To be used for tracking the memory of up to 4 spots in the iter loop."),(0,n.kt)("h4",{id:"cob_id-6"},"cob","_","id"),(0,n.kt)("p",null,"RPDO4"),(0,n.kt)("h4",{id:"encode-16"},"encode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def encode()\n")),(0,n.kt)("p",null,"Returns the data contained by the class encoded as CAN message data."),(0,n.kt)("h4",{id:"decode-16"},"decode"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-python"},"def decode(data)\n")),(0,n.kt)("p",null,"Decodes CAN message data and populates the values of the class."))}u.isMDXComponent=!0}}]);