"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[1622],{5996:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),i=(a(7294),a(3905));a(1839);const o={id:"brain-apps",title:"Developing Custom Applications"},r="Developing Custom Applications",l={unversionedId:"brain/brain-apps",id:"brain/brain-apps",title:"Developing Custom Applications",description:"We now have a full tutorial that walks you through every step of creating custom applications!",source:"@site/docs/brain/custom-applications.md",sourceDirName:"brain",slug:"/brain/brain-apps",permalink:"/docs/brain/brain-apps",draft:!1,editUrl:"https://github.com/farm-ng/amiga-dev-kit/tree/main/website/docs/brain/custom-applications.md",tags:[],version:"current",frontMatter:{id:"brain-apps",title:"Developing Custom Applications"},sidebar:"docs",previous:{title:"Install",permalink:"/docs/brain/brain-install"},next:{title:"Recommended Tools",permalink:"/docs/hardware-tools/recommended-tools"}},s={},p=[{value:"Quick Tips",id:"quick-tips",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Initial Configuration",id:"initial-configuration",level:3},{value:"Select an app",id:"select-an-app",level:3},{value:"Live Code Syncing",id:"live-code-syncing",level:3}],m={toc:p};function u(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"developing-custom-applications"},"Developing Custom Applications"),(0,i.kt)("admonition",{type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"We now have a full tutorial that walks you through every step of creating custom applications!"),(0,i.kt)("p",{parentName:"admonition"},"Check it out at ",(0,i.kt)("a",{parentName:"p",href:"/docs/examples/virtual_joystick/virtual-joystick-overview"},"Vurtual Joystick Tutorial"),".")),(0,i.kt)("h3",{id:"quick-tips"},"Quick Tips"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},'The Amiga user is able to install APT packages. Edit the "entry.sh" script in the sample git repository.'),(0,i.kt)("li",{parentName:"ul"},"We leverage a venv per application. The contents of requirements.txt will be installed by the bootstrap.sh script."),(0,i.kt)("li",{parentName:"ul"},'If you\'ve updated the requirements.txt remove the hidden ".lock" before relaunching the app from the Brain UI.'),(0,i.kt)("li",{parentName:"ul"},"You may use VSCode remote development/containers to edit directly on the Amiga brain as well.")),(0,i.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Linux / WSL:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"apt install wget")))),(0,i.kt)("li",{parentName:"ul"},"Mac:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"brew install wget"))))),(0,i.kt)("h3",{id:"initial-configuration"},"Initial Configuration"),(0,i.kt)("p",null,"To make ssh easier, we'll add some configuration to our ssh on the workstation."),(0,i.kt)("p",null,"First check if a file ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.ssh/config")," exists on your workstation.\n",(0,i.kt)("inlineCode",{parentName:"p"},"~/")," is the home folder on your workstation."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("ol",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ol"},"If this file does not exist, you'll have to create it.")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"cd ~ # Navigate to your home folder\nls -a # Check for a folder called `.ssh/`\n")),(0,i.kt)("ol",{parentName:"admonition",start:2},(0,i.kt)("li",{parentName:"ol"},"If ",(0,i.kt)("inlineCode",{parentName:"li"},"~/.ssh/")," does not exist, run:")),(0,i.kt)("pre",{parentName:"admonition"},(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-keygen # create ~/.ssh/ folder\n")),(0,i.kt)("ol",{parentName:"admonition",start:3},(0,i.kt)("li",{parentName:"ol"},"Create a file called ",(0,i.kt)("inlineCode",{parentName:"li"},"config")," (no extension) in ",(0,i.kt)("inlineCode",{parentName:"li"},"~/.ssh")))),(0,i.kt)("p",null,"Add the following to your  ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.ssh/config"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"Host amiga\n    HostName <ip address>\n    Port 22\n    User amiga\n    StrictHostKeyChecking no\n")),(0,i.kt)("admonition",{title:"tips",type:"tip"},(0,i.kt)("ul",{parentName:"admonition"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<ip address>")," can be found on the bottom right of the Amiga Brain screen",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Remove the ",(0,i.kt)("inlineCode",{parentName:"li"},"<")," & ",(0,i.kt)("inlineCode",{parentName:"li"},">")," symbols."))),(0,i.kt)("li",{parentName:"ul"},"Your development station and your Amiga should be on the same network."))),(0,i.kt)("p",null,"This utilizes the IP address displayed on the bottom right of the brain display:"),(0,i.kt)("p",null,"Let\u2019s copy our keys to the robot as well (you may need to do this any time you are working with a new robot)"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ssh-copy-id amiga\n")),(0,i.kt)("p",null,"Now you can ssh to the robot with:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"ssh amiga\nexit\n")),(0,i.kt)("h3",{id:"select-an-app"},"Select an app"),(0,i.kt)("p",null,"Select an example from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/farm-ng/amiga-brain-api/tree/main/py/examples"},"amiga-brain-api examples")," or create an app from the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/farm-ng/amiga-brain-example"},"template repository"),".\nSee the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/farm-ng/amiga-brain-example#readme"},"template README")," for instructions on cloning and creating an app."),(0,i.kt)("admonition",{title:"coming soon",type:"caution"},(0,i.kt)("p",{parentName:"admonition"},"The ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/farm-ng/amiga-brain-api/tree/main/py/examples"},"amiga-brain-api examples")," will soon be updated to match\nthe template repository for setup / install on the amiga."),(0,i.kt)("p",{parentName:"admonition"},"In the meantime, you can copy the ",(0,i.kt)("inlineCode",{parentName:"p"},"main.py"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"requirements.txt"),", and ",(0,i.kt)("inlineCode",{parentName:"p"},"assets/")," directory (if present)\nfrom the example and drop them into an app you create in the template repository.")),(0,i.kt)("h3",{id:"live-code-syncing"},"Live Code Syncing"),(0,i.kt)("p",null,"Now we'll start a synchronization session that will mirror the code in this directory to an Apps directory (/data/apps) on the Amiga Brain. Note: This directory is persistent across reboots."),(0,i.kt)("p",null,"Our current sync process leverages Mutagen, the sync.sh script will set this up for you. Please provide your sudo password if required. This will copy the Mutagen binary and agents to your local filesystem.\nAdditional documentation regarding Mutagen may be viewed at: ",(0,i.kt)("a",{parentName:"p",href:"https://mutagen.io/documentation/introduction"},"Mutagen"),"."),(0,i.kt)("admonition",{type:"info"},(0,i.kt)("p",{parentName:"admonition"},"Run this from the app directory where you'll find ",(0,i.kt)("inlineCode",{parentName:"p"},"sync.sh"),"!")),(0,i.kt)("p",null,"To start the synchronization process in the background:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./sync.sh -s start\n")),(0,i.kt)("p",null,"To stop the synchronization process:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./sync.sh -s stop\n")),(0,i.kt)("p",null,"Finally to view the status:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"./sync.sh -s status\n")),(0,i.kt)("p",null,"While the sync process is running, any changes are mirrored to the Amiga Brain."),(0,i.kt)("p",null,'To test this process out, now that the current directory amiga-dev-kit/brain/examples/hello is being synchronized to your brain, lets trigger a refresh of the currently loaded apps by clicking on the "home" icon near the top right.'),(0,i.kt)("p",null,'Click on the new app labeled "Hello" on the Amiga Brain. After a brief moment (bootstrapping the app) the app will load and you\'ll be greeting a a simple UI app. Close the app by clicking "Exit".'),(0,i.kt)("p",null,'On your workstation, open the "main.py" file in an editor and change the value for YOUR_NAME to be your name (i.e. joe dirt). Save the file and relaunch the app from the Amiga Brain. The text will now reflect your changes.'))}u.isMDXComponent=!0}}]);